{"version":3,"sources":["Sidebar.js","FusionBar.js","FusionLine.js","FusionPie.js","FusionStack.js","Today.js","FC.js","GoogleBar.js","GoogleLine.js","GoogleGeo.js","GoogleScatter.js","GC.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","react_default","a","createElement","className","onClick","this","props","fcclick","href","gcclick","React","Component","ReactFC","fcRoot","FusionCharts","Column2D","FusionTheme","chartConfigs","type","dataFormat","dataSource","chart","caption","subCaption","xAxisName","yAxisName","numberSuffix","theme","bgColor","palettecolors","containerBackgroundOpacity","data","label","value","FusionBar","ReactFC_default","Object","assign","width","height","yaxisname","subcaption","showhovereffect","numbersuffix","drawcrossline","plottooltext","categories","category","dataset","seriesname","FusionLine","showlegend","showpercentvalues","legendposition","usedataplotcolorforlabels","FusionPie","showsum","FusionStack","Today","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","today","Date","date","getDate","getMonth","getFullYear","state","FC","id","Today_Today","src_FusionBar","src_FusionLine","src_FusionPie","src_FusionStack","GoogleBar","index_esm","chartType","spreadSheetUrl","spreadSheetQueryParameters","headers","query","options","hAxis","textStyle","color","vAxis","format","titleTextStyle","backgroundColor","legendTextStyle","colors","rootProps","data-testid","GoogleLine","title","subtitle","data_map","GoogleGeo","chartEvents","eventName","callback","_ref","selection","chartWrapper","getChart","getSelection","length","region","row","console","log","curveType","legend","position","GoogleScatter","legendToggle","GC","src_GoogleScatter","src_GoogleGeo","src_GoogleBar","src_GoogleLine","App","showGC","showFC","setState","src_Sidebar","GConClick","bind","FConClick","src_FC","src_GC","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8169817a.chunk.js","sourcesContent":["import React from 'react';\nclass Sidebar extends React.Component{\n\n  render(){\n    return(\n      <div className=\"sidebar\">\n        <h1>React Dashboard</h1>\n        <h2>Prototype</h2>\n        <ul>\n          <li onClick={this.props.fcclick}><a href=\"#fusion\"><i className=\"fas fa-chart-area\"></i>Dashboard</a></li>\n          <li onClick={this.props.gcclick}><a href=\"#google\"><i className=\"fas fa-chart-pie\"></i>Google Charts</a></li>\n          <li><a href=\"#plotly\"><i className=\"fas fa-chart-line\"></i>Plotly</a></li>\n          <li onClick={this.props.fcclick}><a href=\"#fusion\"><i className=\"fas fa-chart-bar\"></i>Fushion Charts</a></li>\n        </ul>\n      </div>\n    );\n  }\n}\nexport default Sidebar;\n","\n// Step 1 - Including react\nimport React from 'react';\n\n// Step 2 - Including the react-fusioncharts component\nimport ReactFC from 'react-fusioncharts';\n\n// Step 3 - Including the fusioncharts library\nimport FusionCharts from 'fusioncharts';\n\n// Step 4 - Including the chart type\nimport Column2D from 'fusioncharts/fusioncharts.charts';\n\n// Step 5 - Including the theme as fusion\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\n\n// Step 6 - Adding the chart as dependency to the core fusioncharts\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\n// Step 7 - Creating the JSON object to store the chart configurations\nconst chartConfigs = {\n    type: 'column2d',// The chart type\n    dataFormat: 'json', // Data type\n    dataSource: {\n        // Chart Configuration\n        \"chart\": {\n            \"caption\": \"Countries With Highest Air Pollution [2017-18]\",\n            \"subCaption\": \"In PPM = Micrograms per cubic meter\",\n            \"xAxisName\": \"Country\",\n            \"yAxisName\": \"Median (PPM)\",\n            \"numberSuffix\": \"K\",\n            \"theme\": \"candy\",\n            \"bgColor\": \"#262a33\",\n            \"palettecolors\":\"5d62b5,29c3be,f2726f\",\n            \"containerBackgroundOpacity\": \"0\",\n        },\n        // Chart Data\n        \"data\": [{\n            \"label\": \"Saudi Arabia\",\n            \"value\": \"108\"\n        }, {\n            \"label\": \"Qatar\",\n            \"value\": \"103\"\n        }, {\n            \"label\": \"Egypt\",\n            \"value\": \"93\"\n        }, {\n            \"label\": \"Bangladesh\",\n            \"value\": \"84\"\n        }, {\n            \"label\": \"Kuwait\",\n            \"value\": \"75\"\n        }, {\n            \"label\": \"Cameroon\",\n            \"value\": \"65\"\n        }, {\n            \"label\": \"Nepal\",\n            \"value\": \"64\"\n        }, {\n            \"label\": \"UAE\",\n            \"value\": \"64\"\n        }]\n    }\n};\n\n// Step 8 - Creating the DOM element to pass the react-fusioncharts component\nclass FusionBar extends React.Component {\n  render() {\n     return (\n       <div className=\"chart\">\n         <ReactFC\n            {...chartConfigs} width={this.props.width} height={this.props.height}/>\n        </div>\n     );\n  }\n}\n\nexport default FusionBar;\n","\n// Step 1 - Including react\nimport React from 'react';\n\n// Step 2 - Including the react-fusioncharts component\nimport ReactFC from 'react-fusioncharts';\n\n// Step 3 - Including the fusioncharts library\n\n// Step 4 - Including the chart type\n\n// Step 5 - Including the theme as fusion\n\n// Step 6 - Adding the chart as dependency to the core fusioncharts\n\n// Step 7 - Creating the JSON object to store the chart configurations\nconst chartConfigs = {\n    type: 'msline',// The chart type\n    dataFormat: 'json', // Data type\n    dataSource: {\n        // Chart Configuration\n        \"chart\": {\n    \"caption\": \"Reach of Social Media Platforms amoung youth\",\n    \"yaxisname\": \"% of youth on this platform\",\n    \"subcaption\": \"2012-2016\",\n    \"showhovereffect\": \"1\",\n    \"numbersuffix\": \"%\",\n    \"drawcrossline\": \"1\",\n    \"plottooltext\": \"<b>$dataValue</b> of youth were on $seriesName\",\n    \"theme\": \"candy\",\n    \"palettecolors\":\"5d62b5,29c3be,f2726f\"\n  },\n  \"categories\": [\n    {\n      \"category\": [\n        {\n          \"label\": \"2012\"\n        },\n        {\n          \"label\": \"2013\"\n        },\n        {\n          \"label\": \"2014\"\n        },\n        {\n          \"label\": \"2015\"\n        },\n        {\n          \"label\": \"2016\"\n        }\n      ]\n    }\n  ],\n  \"dataset\": [\n    {\n      \"seriesname\": \"Facebook\",\n      \"data\": [\n        {\n          \"value\": \"62\"\n        },\n        {\n          \"value\": \"64\"\n        },\n        {\n          \"value\": \"64\"\n        },\n        {\n          \"value\": \"66\"\n        },\n        {\n          \"value\": \"78\"\n        }\n      ]\n    },\n    {\n      \"seriesname\": \"Instagram\",\n      \"data\": [\n        {\n          \"value\": \"16\"\n        },\n        {\n          \"value\": \"28\"\n        },\n        {\n          \"value\": \"34\"\n        },\n        {\n          \"value\": \"42\"\n        },\n        {\n          \"value\": \"54\"\n        }\n      ]\n    },\n    {\n      \"seriesname\": \"LinkedIn\",\n      \"data\": [\n        {\n          \"value\": \"20\"\n        },\n        {\n          \"value\": \"22\"\n        },\n        {\n          \"value\": \"27\"\n        },\n        {\n          \"value\": \"22\"\n        },\n        {\n          \"value\": \"29\"\n        }\n      ]\n    },\n    {\n      \"seriesname\": \"Twitter\",\n      \"data\": [\n        {\n          \"value\": \"18\"\n        },\n        {\n          \"value\": \"19\"\n        },\n        {\n          \"value\": \"21\"\n        },\n        {\n          \"value\": \"21\"\n        },\n        {\n          \"value\": \"24\"\n        }\n      ]\n    }\n  ]\n    }\n};\n\n// Step 8 - Creating the DOM element to pass the react-fusioncharts component\nclass FusionLine extends React.Component {\n  render() {\n     return (\n       <div className=\"chart\">\n         <ReactFC\n            {...chartConfigs} width={this.props.width} height={this.props.height}/>\n        </div>\n     );\n  }\n}\n\nexport default FusionLine;\n","import React from 'react';\nimport ReactFusioncharts from 'react-fusioncharts';\n\n// Resolves charts dependancy\n\nconst dataSource = {\n  \"chart\": {\n    \"caption\": \"Market Share of Web Servers\",\n    \"plottooltext\": \"<b>$percentValue</b> of web servers run on $label servers\",\n    \"showlegend\": \"1\",\n    \"showpercentvalues\": \"1\",\n    \"legendposition\": \"bottom\",\n    \"usedataplotcolorforlabels\": \"1\",\n    \"theme\": \"candy\",\n    \"palettecolors\": \"#5d62b5,#ffc533,#f2726f,#29c3be\"\n  },\n  \"data\": [\n    {\n      \"label\": \"Apache\",\n      \"value\": \"32647479\"\n    },\n    {\n      \"label\": \"Microsoft\",\n      \"value\": \"22100932\"\n    },\n    {\n      \"label\": \"Zeus\",\n      \"value\": \"8000600\"\n    },\n    {\n      \"label\": \"Other\",\n      \"value\": \"18674221\"\n    }\n  ]\n};\n\nclass FusionPie extends React.Component {\n   render() {\n      return (\n        <div className=\"chart\">\n      <ReactFusioncharts\n         type = \"pie2d\"\n         width={this.props.width}\n         height={this.props.height}\n         dataFormat = \"JSON\"\n         dataSource = {dataSource} />\n         </div>\n      );\n   }\n}\nexport default FusionPie;\n","import React from 'react';\nimport ReactFusioncharts from 'react-fusioncharts';\n\nconst dataSource = {\n  \"chart\": {\n    \"caption\": \"Yearly Energy Production Rate\",\n    \"subcaption\": \" Top 5 Developed Countries\",\n    \"numbersuffix\": \" TWh\",\n    \"showsum\": \"1\",\n    \"plottooltext\": \"$label produces <b>$dataValue</b> of energy from $seriesName\",\n    \"drawcrossline\": \"1\",\n    \"theme\": \"candy\",\n    \"palettecolors\": \"#5d62b5,#ffc533,#f2726f,#29c3be,#62b58f\"\n  },\n  \"categories\": [\n    {\n      \"category\": [\n        {\n          \"label\": \"Canada\"\n        },\n        {\n          \"label\": \"China\"\n        },\n        {\n          \"label\": \"Russia\"\n        },\n        {\n          \"label\": \"Australia\"\n        },\n        {\n          \"label\": \"United States\"\n        },\n      ]\n    }\n  ],\n  \"dataset\": [\n    {\n      \"seriesname\": \"Coal\",\n      \"data\": [\n        {\n          \"value\": \"400\"\n        },\n        {\n          \"value\": \"830\"\n        },\n        {\n          \"value\": \"500\"\n        },\n        {\n          \"value\": \"420\"\n        },\n        {\n          \"value\": \"790\"\n        },\n      ]\n    },\n    {\n      \"seriesname\": \"Hydro\",\n      \"data\": [\n        {\n          \"value\": \"350\"\n        },\n        {\n          \"value\": \"620\"\n        },\n        {\n          \"value\": \"410\"\n        },\n        {\n          \"value\": \"370\"\n        },\n        {\n          \"value\": \"720\"\n        },\n\n      ]\n    },\n    {\n      \"seriesname\": \"Nuclear\",\n      \"data\": [\n        {\n          \"value\": \"210\"\n        },\n        {\n          \"value\": \"400\"\n        },\n        {\n          \"value\": \"450\"\n        },\n        {\n          \"value\": \"180\"\n        },\n        {\n          \"value\": \"570\"\n        },\n      ]\n    },\n    {\n      \"seriesname\": \"Gas\",\n      \"data\": [\n        {\n          \"value\": \"180\"\n        },\n        {\n          \"value\": \"330\"\n        },\n        {\n          \"value\": \"230\"\n        },\n        {\n          \"value\": \"160\"\n        },\n        {\n          \"value\": \"440\"\n        },\n      ]\n    },\n    {\n      \"seriesname\": \"Oil\",\n      \"data\": [\n        {\n          \"value\": \"60\"\n        },\n        {\n          \"value\": \"200\"\n        },\n        {\n          \"value\": \"200\"\n        },\n        {\n          \"value\": \"50\"\n        },\n        {\n          \"value\": \"230\"\n        },\n      ]\n    }\n  ]\n};\n\nclass FusionStack extends React.Component {\n   render() {\n      return (\n        <div className=\"chart\">\n      <ReactFusioncharts\n         type = \"stackedcolumn2d\"\n         width={this.props.width}\n         height={this.props.height}\n         dataFormat = \"JSON\"\n         dataSource = {dataSource} />\n         </div>\n      );\n   }\n}\nexport default FusionStack;\n","import React from 'react';\nexport default class Today extends React.Component {\n    constructor() {\n        super();\n        var today = new Date(),\n            date = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear();\n\n        this.state = {\n            date: date\n        };\n    }\n\n    render() {\n        return (\n            <div className='date'>\n                {this.state.date}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport FusionBar from './FusionBar.js';\nimport FusionLine from './FusionLine.js';\nimport FusionPie from './FusionPie.js';\nimport FusionStack from './FusionStack.js';\nimport Today from './Today.js';\n\nclass FC extends React.Component{\nrender(){\n  return(\n    <div id=\"fusion\" className=\"graphs\">\n    <h1>Fusion Charts <Today /></h1>\n    <FusionBar width={this.props.width} height={this.props.height}/>\n    <FusionLine width={this.props.width} height={this.props.height}/>\n    <FusionPie width={this.props.width} height={this.props.height}/>\n    <FusionStack width={this.props.width} height={this.props.height}/>\n    </div>\n  );\n}\n}\nexport default FC;\n","import React from 'react';\nimport './App.css';\nimport { Chart } from \"react-google-charts\";\nclass GoogleBar extends React.Component {\n  render() {\n\n     return (\n       <Chart className=\"chart\"\n        chartType=\"ColumnChart\"\n        spreadSheetUrl=\"https://docs.google.com/spreadsheets/d/1XWJLkAwch5GXAt_7zOFDcg8Wm8Xv29_8PWuuW15qmAE\"\n        spreadSheetQueryParameters={{\n         headers: 1,\n         query: 'SELECT A, H, O, Q, R, U LIMIT 5 OFFSET 8',\n        }}\n        options={{\n         hAxis: {\n           textStyle:{color: '#FFF'}\n         },\n         vAxis: {\n           format: 'long',\n           textStyle:{color: '#FFF'}\n         },\n         titleTextStyle: {\n        color: '#333333'\n        },\n\n         backgroundColor: '#262a33',\n         legendTextStyle: {color:'#FFF'},\n         colors: ['#586ba4','#f5dd90','#f68e5f','#324376','#f76c5e'],\n        }}\n        rootProps={{ 'data-testid': '2' }}\n        height={this.props.height}\n        width={this.props.width}\n        />\n     );\n  }\n}\nexport default GoogleBar;\n","import React from 'react';\nimport './App.css';\nimport { Chart } from \"react-google-charts\";\nclass GoogleLine extends React.Component {\n  render() {\n     return (\n       <Chart className=\"chart\"\n         chartType=\"LineChart\"\n         spreadSheetUrl=\"https://docs.google.com/spreadsheets/d/1vyi-Yd3JnvcYhKY6utMVGZcQa5TkW21nCMN8gx7GKi0/edit?usp=sharing\"\n         options={{\n           hAxis: {\n             title: 'Year',\n             format: '0000',\n             textStyle:{color: '#FFF'}\n           },\n           vAxis: {\n             title: 'CO2 Emissions',\n             format: '000',\n             textStyle:{color: '#FFF'}\n           },\n           chart:{\n             title: 'CO2 Emission trends over 1998-2017',\n             subtitle: 'Data Source: NASA',\n           },\n           backgroundColor: '#262a33',\n           titleTextStyle: {\n             color: '#333333'\n           },\n           colors: ['#f5dd90'],\n           legendTextStyle: {color:'#FFF'},\n         }}\n         rootProps={{ 'data-testid': '1' }}\n         height={this.props.height}\n         width={this.props.width}\n       />\n     );\n  }\n}\nexport default GoogleLine;\n","import React from 'react';\nimport './App.css';\nimport { Chart } from \"react-google-charts\";\n\nconst data_map = [\n  [\"Country\", \"Popularity\"],\n  [\"Germany\", 200],\n  [\"United States\", 300],\n  [\"Brazil\", 400],\n  [\"Canada\", 500],\n  [\"France\", 600],\n  [\"RU\", 700]\n];\n\nclass GoogleGeo extends React.Component {\n  render() {\n     return (\n       <Chart\n       className=\"chart\"\n       chartType=\"GeoChart\"\n       data={data_map}\n       options={{\n         backgroundColor: '#262a33',\n         colors: ['#f76c5e'],\n       }}\n       chartEvents={[\n         {\n           eventName: \"select\",\n           callback: ({ chartWrapper }) => {\n             const chart = chartWrapper.getChart();\n             const selection = chart.getSelection();\n             if (selection.length === 0) return;\n             const region = data_map[selection[0].row + 1];\n             console.log(\"Selected : \" + region);\n           }\n         }\n       ]}\n       height={this.props.height}\n       width={this.props.width}\n\n\n       />\n     );\n  }\n}\nexport default GoogleGeo;\n","import React from 'react';\nimport './App.css';\nimport { Chart } from \"react-google-charts\";\n\nconst options = {\n  title: \"Company Performance\",\n  curveType: \"function\",\n  legend: { position: \"bottom\" },\n  hAxis: {\n  textStyle:{color: '#FFF'},\n  titleTextStyle: {\n        color: '#fff'\n    },\n  },\n  vAxis: {\n    textStyle:{color: '#FFF'},\n    titleTextStyle: {\n          color: '#fff'\n    },\n  },\n  backgroundColor: '#262a33',\n  legendTextStyle: {color:'#FFF'},\n  colors: ['#f5dd90','#f76c5e'],\n  titleTextStyle: {\n        color: '#fff',\n  }\n};\nconst data = [\n  [\"Year\", \"Sales\", \"Expenses\"],\n  [\"2004\", 1000, 400],\n  [\"2005\", 1170, 460],\n  [\"2006\", 660, 1120],\n  [\"2008\", 1030, 540],\n  [\"2009\", 1000, 400],\n  [\"2010\", 1170, 460],\n  [\"2011\", 660, 1120],\n  [\"2012\", 1030, 540]\n];\nclass GoogleScatter extends React.Component {\n  render() {\n     return (\n         <Chart\n         className=\"chart\"\n         chartType=\"ScatterChart\"\n         data={data}\n         options={options}\n         legendToggle\n         height={this.props.height}\n         width={this.props.width}\n         />\n     );\n  }\n}\nexport default GoogleScatter;\n","import React from 'react';\nimport GoogleBar from './GoogleBar.js';\nimport GoogleLine from './GoogleLine.js';\nimport GoogleGeo from './GoogleGeo.js';\nimport GoogleScatter from './GoogleScatter.js';\n\nclass GC extends React.Component{\n\n render(){\n  return(\n    <div id=\"gc\" className=\"graphs\">\n    <h1>Google Charts</h1>\n    <GoogleScatter width={this.props.width} height={this.props.height} />\n    <GoogleGeo width={this.props.width} height={this.props.height} />\n    <GoogleBar width={this.props.width} height={this.props.height} />\n    <GoogleLine width={this.props.width} height={this.props.height} />\n    </div>\n  );\n}\n}\nexport default GC;\n","import React from 'react';\nimport './App.css';\nimport { Chart } from \"react-google-charts\";\nimport Sidebar from './Sidebar.js';\nimport FC from './FC.js';\nimport GC from './GC.js';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      width:\"100%\",\n      height: \"400px\",\n      showGC:false,\n      showFC:true,\n    }\n  }\n  GConClick() {\n            this.setState({ showGC: true, showFC:false});\n  }\n  FConClick() {\n            this.setState({ showGC: false, showFC: true });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar gcclick={this.GConClick.bind(this)} fcclick={this.FConClick.bind(this)} />\n        <div>\n        { this.state.showFC ? <FC width={this.state.width} height={this.state.height}/>: null }\n        { this.state.showGC ? <GC  width={this.state.width} height={this.state.height}/> : null }\n        </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}