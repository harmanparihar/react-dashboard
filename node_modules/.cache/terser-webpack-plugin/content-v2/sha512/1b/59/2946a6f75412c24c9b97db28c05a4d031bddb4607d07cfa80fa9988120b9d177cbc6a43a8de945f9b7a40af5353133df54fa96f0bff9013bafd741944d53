{"map":"{\"version\":3,\"sources\":[\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/Donut.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/Multiple.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/Event.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/Onoff.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/Sidebar.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/Chart3d.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/FusionBar.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/FusionLine.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/FusionPie.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/FusionStack.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/Today.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/FC.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/GoogleBar.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/GoogleLine.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/GoogleGeo.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/GoogleScatter.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/GC.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/App.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/serviceWorker.js\",\"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/index.js\"],\"names\":[\"data\",\"options\",\"title\",\"pieHole\",\"is3D\",\"React\",\"Component\",\"ReactFC\",\"fcRoot\",\"FusionCharts\",\"Charts\",\"FusionTheme\",\"chartConfigs\",\"type\",\"width\",\"height\",\"dataFormat\",\"dataSource\",\"chart\",\"caption\",\"subCaption\",\"xAxisName\",\"yAxisName\",\"numberSuffix\",\"theme\",\"label\",\"value\",\"Chart\",\"PowerCharts\",\"numberPrefix\",\"yaxismaxvalue\",\"plotToolText\",\"categories\",\"category\",\"fontItalic\",\"dataset\",\"seriesname\",\"alpha\",\"allowDrag\",\"toolText\",\"Sidebar\",\"react_default\",\"a\",\"createElement\",\"className\",\"onClick\",\"this\",\"props\",\"fcclick\",\"href\",\"gcclick\",\"Column2D\",\"bgColor\",\"palettecolors\",\"containerBackgroundOpacity\",\"FusionBar\",\"ReactFC_default\",\"Object\",\"assign\",\"yaxisname\",\"subcaption\",\"showhovereffect\",\"numbersuffix\",\"drawcrossline\",\"plottooltext\",\"FusionLine\",\"showlegend\",\"showpercentvalues\",\"legendposition\",\"usedataplotcolorforlabels\",\"FusionPie\",\"_chart\",\"showsum\",\"defineProperty\",\"FusionStack\",\"Today\",\"_this\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"today\",\"Date\",\"date\",\"getDate\",\"getMonth\",\"getFullYear\",\"state\",\"FC\",\"id\",\"Today_Today\",\"src_FusionBar\",\"src_FusionLine\",\"src_FusionPie\",\"src_FusionStack\",\"GoogleBar\",\"index_esm\",\"chartType\",\"spreadSheetUrl\",\"spreadSheetQueryParameters\",\"headers\",\"query\",\"hAxis\",\"textStyle\",\"color\",\"vAxis\",\"format\",\"titleTextStyle\",\"backgroundColor\",\"legendTextStyle\",\"colors\",\"rootProps\",\"data-testid\",\"GoogleLine\",\"subtitle\",\"data_map\",\"GoogleGeo\",\"chartEvents\",\"eventName\",\"callback\",\"_ref\",\"selection\",\"chartWrapper\",\"getChart\",\"getSelection\",\"length\",\"region\",\"row\",\"console\",\"log\",\"curveType\",\"legend\",\"position\",\"GoogleScatter\",\"legendToggle\",\"GC\",\"src_GoogleBar\",\"src_GoogleLine\",\"src_GoogleGeo\",\"src_GoogleScatter\",\"App\",\"showGC\",\"showFC\",\"setState\",\"src_Sidebar\",\"GConClick\",\"bind\",\"FConClick\",\"src_FC\",\"src_GC\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport Chart from \\\"react-google-charts\\\";\\n\\nconst data = [\\n  [\\\"Task\\\", \\\"Hours per Day\\\"],\\n  [\\\"Work\\\", 11],\\n  [\\\"Eat\\\", 2],\\n  [\\\"Commute\\\", 2],\\n  [\\\"Watch TV\\\", 2],\\n  [\\\"Sleep\\\", 7] // CSS-style declaration\\n];\\nconst options = {\\n  title: \\\"My Daily Activities\\\",\\n  pieHole: 0.4,\\n  is3D: true\\n};\\nclass Donut extends React.Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <Chart\\n          chartType=\\\"PieChart\\\"\\n          width=\\\"500px\\\"\\n          height=\\\"400px\\\"\\n          data={data}\\n          options={options}\\n        />\\n      </div>\\n    );\\n  }\\n}\\nexport default Donut;\\n\",\"import React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport FusionCharts from 'fusioncharts';\\nimport Charts from 'fusioncharts/fusioncharts.charts';\\nimport ReactFC from 'react-fusioncharts';\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\\n\\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\\n\\nconst chartConfigs = {\\n    type: 'pie2d',\\n    width: 500,\\n    height: 400,\\n    dataFormat: 'json',\\n    dataSource: {\\n        // Chart configuration\\n        \\\"chart\\\": {\\n            \\\"caption\\\": \\\"Countries With Most Oil Reserves [2017-18]\\\",\\n            \\\"subCaption\\\": \\\"In MMbbl = One Million barrels\\\",\\n            \\\"xAxisName\\\": \\\"Country\\\",\\n            \\\"yAxisName\\\": \\\"Reserves (MMbbl)\\\",\\n            \\\"numberSuffix\\\": \\\"K\\\",\\n            \\\"theme\\\": \\\"fusion\\\"\\n        },\\n        // Chart data\\n        \\\"data\\\": [{\\n            \\\"label\\\": \\\"Venezuela\\\",\\n            \\\"value\\\": \\\"290\\\"\\n        }, {\\n            \\\"label\\\": \\\"Saudi\\\",\\n            \\\"value\\\": \\\"260\\\"\\n        }, {\\n            \\\"label\\\": \\\"Canada\\\",\\n            \\\"value\\\": \\\"180\\\"\\n        }, {\\n            \\\"label\\\": \\\"Iran\\\",\\n            \\\"value\\\": \\\"140\\\"\\n        }, {\\n            \\\"label\\\": \\\"Russia\\\",\\n            \\\"value\\\": \\\"115\\\"\\n        }, {\\n            \\\"label\\\": \\\"UAE\\\",\\n            \\\"value\\\": \\\"100\\\"\\n        }, {\\n            \\\"label\\\": \\\"US\\\",\\n            \\\"value\\\": \\\"30\\\"\\n        }, {\\n            \\\"label\\\": \\\"China\\\",\\n            \\\"value\\\": \\\"30\\\"\\n        }]\\n    },\\n};\\n\\nclass Multiple extends Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      chart: {},\\n      currentVal: 'column2d'\\n    };\\n\\n    this.renderComplete = this.renderComplete.bind(this);\\n    this.radioHandler = this.radioHandler.bind(this);\\n  }\\n\\n  renderComplete(chart) {\\n    this.setState({ chart });\\n  }\\n\\n  // Handler for radio buttons to change chart type.\\n  radioHandler(e) {\\n    this.state.chart.chartType(e.currentTarget.value);\\n    this.setState({\\n      currentVal: e.currentTarget.value\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <ReactFC {...chartConfigs} onRender={this.renderComplete} />\\n        <br />\\n        <center>\\n          <span>Choose a chart type:</span>\\n          <div className=\\\"change-type\\\">\\n            <div>\\n              <input\\n                type=\\\"radio\\\"\\n                value=\\\"column2d\\\"\\n                onChange={this.radioHandler}\\n                checked={this.state.currentVal === 'column2d'} />\\n              <label>Column 2D Chart</label>\\n            </div>\\n            <div>\\n              <input\\n                type=\\\"radio\\\"\\n                value=\\\"bar2d\\\"\\n                onChange={this.radioHandler}\\n                checked={this.state.currentVal === 'bar2d'} />\\n              <label>Bar 2D Chart</label>\\n            </div>\\n            <div>\\n              <input\\n                type=\\\"radio\\\"\\n                value=\\\"pie2d\\\"\\n                onChange={this.radioHandler}\\n                checked={this.state.currentVal === 'pie2d'} />\\n              <label>Pie 2D Chart</label>\\n            </div>\\n          </div>\\n        </center>\\n      </div>\\n    );\\n  }\\n}\\nexport default Multiple;\\n\",\"//Including react\\nimport React, { Component } from 'react';\\n\\n//Including the react-fusioncharts component\\nimport ReactDOM from 'react-dom';\\n\\n//Including the fusioncharts library\\nimport FusionCharts from 'fusioncharts';\\n\\n//Including the chart type\\nimport Chart from 'fusioncharts/fusioncharts.charts';\\n\\n//Including react-fusioncharts component\\nimport ReactFC from 'react-fusioncharts';\\n\\n//Including the theme as fusion\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\\n\\n//Adding the chart as dependency to the core fusioncharts\\nReactFC.fcRoot(FusionCharts, Chart, FusionTheme);\\n\\n//Creating the JSON object to store the chart configurations\\n\\nconst chartConfigs = {\\n    type: 'column2d',\\n    width: '500',\\n    height: '400',\\n    dataFormat: 'json',\\n    dataSource: {\\n        // Chart configuration\\n        \\\"chart\\\": {\\n            \\\"caption\\\": \\\"Countries With Most Oil Reserves [2017-18]\\\",\\n            \\\"subCaption\\\": \\\"In MMbbl = One Million barrels\\\",\\n            \\\"xAxisName\\\": \\\"Country\\\",\\n            \\\"yAxisName\\\": \\\"Reserves (MMbbl)\\\",\\n            \\\"numberSuffix\\\": \\\"K\\\",\\n            \\\"theme\\\": \\\"fusion\\\"\\n        },\\n        // Chart data\\n        \\\"data\\\": [{\\n            \\\"label\\\": \\\"Venezuela\\\",\\n            \\\"value\\\": \\\"290\\\"\\n        }, {\\n            \\\"label\\\": \\\"Saudi\\\",\\n            \\\"value\\\": \\\"260\\\"\\n        }, {\\n            \\\"label\\\": \\\"Canada\\\",\\n            \\\"value\\\": \\\"180\\\"\\n        }, {\\n            \\\"label\\\": \\\"Iran\\\",\\n            \\\"value\\\": \\\"140\\\"\\n        }, {\\n            \\\"label\\\": \\\"Russia\\\",\\n            \\\"value\\\": \\\"115\\\"\\n        }, {\\n            \\\"label\\\": \\\"UAE\\\",\\n            \\\"value\\\": \\\"100\\\"\\n        }, {\\n            \\\"label\\\": \\\"US\\\",\\n            \\\"value\\\": \\\"30\\\"\\n        }, {\\n            \\\"label\\\": \\\"China\\\",\\n            \\\"value\\\": \\\"30\\\"\\n        }]\\n    },\\n};\\n\\nvar defaultMessage = 'Click on the plot to see the value along with the label';\\n\\nclass Event extends Component {\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n          message: '',\\n          enabled: false\\n        }\\n\\n        this.trackPlotClick = this.trackPlotClick.bind(this);\\n        this.resetChart = this.resetChart.bind(this);\\n        this.dataPlotClick = this.dataPlotClick.bind(this);\\n    }\\n\\n    // Handler for 'Track Data Plot Clicks' button.\\n    // 1. Adds an eventlistener for data plot cick on the chart\\n    // 2. Sets the default message when data plot click tracking is enabled\\n    trackPlotClick() {\\n        FusionCharts.addEventListener('dataplotClick', this.dataPlotClick);\\n        this.setState({\\n            message: defaultMessage,\\n            enabled: true\\n        });\\n      }\\n\\n    // Event listener for dataplotclick event on chart. Update message with data plot values.\\n    dataPlotClick(eventObj, dataObj) {\\n        this.setState({\\n            message: [\\n                'You have clicked on plot ',\\n                <strong>{dataObj.categoryLabel}</strong>,\\n                ' whose value is ',\\n                <strong>{dataObj.displayValue}</strong>\\n            ]\\n        });\\n    }\\n\\n    // Handler for 'Reset' button.\\n    // Resets the chart to default message and removed the event listener.\\n    resetChart() {\\n    FusionCharts.removeEventListener('dataplotClick', this.dataPlotClick);\\n        this.setState({\\n            message: '',\\n            enabled: false\\n        });\\n      }\\n\\n      render () {\\n        return (\\n          <div>\\n            <ReactFC {...chartConfigs} />\\n            <div style={{ padding: '5px' }} id=\\\"message\\\">\\n              { this.state.message || 'Click the below buttons to add an event dynamically to a charts' }\\n            </div>\\n            <button\\n              className='btn btn-outline-secondary btn-sm'\\n              disabled={this.state.enabled}\\n              onClick={this.trackPlotClick}\\n            >\\n              Add/ listen to data plot click event\\n            </button>\\n            <button\\n              className='btn btn-outline-secondary btn-sm'\\n              disabled={!this.state.enabled}\\n              onClick={this.resetChart}\\n            >\\n              Remove data plot click event\\n            </button>\\n          </div>\\n        )\\n      }\\n}\\nexport default Event;\\n\",\"//Including react\\nimport React, { Component } from 'react';\\n\\n//Including the react-fusioncharts component\\nimport ReactDOM from 'react-dom';\\n\\n//Including the fusioncharts library\\nimport FusionCharts from 'fusioncharts';\\n\\n//Including the chart type\\nimport PowerCharts from 'fusioncharts/fusioncharts.powercharts';\\n\\n//Including react-fusioncharts component\\nimport ReactFC from 'react-fusioncharts';\\n\\n//Including the theme as fusion\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\\n\\n//Adding the chart as dependency to the core fusioncharts\\nReactFC.fcRoot(FusionCharts, PowerCharts, FusionTheme);\\n\\n//Creating the JSON object to store the chart configurations\\n\\nconst chartConfigs = {\\n    type: 'dragcolumn2d',\\n    width: 500,\\n    height: 400,\\n    dataFormat: 'json',\\n    dataSource: {\\n        \\\"chart\\\": {\\n            \\\"caption\\\": \\\"Android and iOS Devices Sales Projections\\\",\\n            \\\"subCaption\\\": \\\"Drag the top of columns to adjust projections for 2017 & 2018\\\",\\n            \\\"numberPrefix\\\": \\\"$\\\",\\n            \\\"numberSuffix\\\": \\\"M\\\",\\n            \\\"yaxismaxvalue\\\": \\\"200\\\",\\n            \\\"theme\\\": \\\"fusion\\\",\\n            \\\"plotToolText\\\": \\\"<b>$label</b><br>$seriesName: <b>$dataValue</b>\\\"\\n        },\\n        \\\"categories\\\": [{\\n            \\\"category\\\": [{\\n                \\\"label\\\": \\\"2014\\\",\\n                \\\"fontItalic\\\": \\\"0\\\"\\n            }, {\\n                \\\"label\\\": \\\"2015\\\",\\n                \\\"fontItalic\\\": \\\"0\\\"\\n            }, {\\n                \\\"label\\\": \\\"2016\\\",\\n                \\\"fontItalic\\\": \\\"0\\\"\\n            }, {\\n                \\\"label\\\": \\\"2017 (Projected)\\\"\\n            }, {\\n                \\\"label\\\": \\\"2018 (Projected)\\\"\\n            }]\\n        }],\\n        \\\"dataset\\\": [{\\n            \\\"seriesname\\\": \\\"Android Devices\\\",\\n            \\\"data\\\": [{\\n                \\\"value\\\": \\\"73\\\",\\n                \\\"alpha\\\": \\\"100\\\",\\n                \\\"allowDrag\\\": \\\"0\\\"\\n            }, {\\n                \\\"value\\\": \\\"80\\\",\\n                \\\"alpha\\\": \\\"100\\\",\\n                \\\"allowDrag\\\": \\\"0\\\"\\n            }, {\\n                \\\"value\\\": \\\"97\\\",\\n                \\\"alpha\\\": \\\"100\\\",\\n                \\\"allowDrag\\\": \\\"0\\\"\\n            }, {\\n                \\\"value\\\": \\\"110\\\",\\n                \\\"toolText\\\": \\\"<b>$label</b><br>$seriesName: <b>$dataValue</b>\\\"\\n            }, {\\n                \\\"value\\\": \\\"180\\\",\\n                \\\"toolText\\\": \\\"<b>$label</b><br>$seriesName: <b>$dataValue</b>\\\"\\n            }]\\n        }, {\\n            \\\"seriesname\\\": \\\"iOS Devices\\\",\\n            \\\"data\\\": [{\\n                \\\"value\\\": \\\"63.2\\\",\\n                \\\"alpha\\\": \\\"100\\\",\\n                \\\"allowDrag\\\": \\\"0\\\"\\n            }, {\\n                \\\"value\\\": \\\"68\\\",\\n                \\\"alpha\\\": \\\"100\\\",\\n                \\\"allowDrag\\\": \\\"0\\\"\\n            }, {\\n                \\\"value\\\": \\\"82\\\",\\n                \\\"alpha\\\": \\\"100\\\",\\n                \\\"allowDrag\\\": \\\"0\\\"\\n            }, {\\n                \\\"value\\\": \\\"99\\\",\\n                \\\"toolText\\\": \\\"<b>$label</b><br>$seriesName: <b>$dataValue</b>\\\"\\n            }, {\\n                \\\"value\\\": \\\"150\\\",\\n                \\\"toolText\\\": \\\"<b>$label</b><br>$seriesName: <b>$dataValue</b>\\\"\\n            }]\\n        }]\\n    }\\n};\\n\\nclass Onoff extends Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      message: 'Drag any column for years 2017 or 2018 to see updated value along with the label',\\n    };\\n\\n    this.dataplotDragEnd = this.dataplotDragEnd.bind(this);\\n  }\\n\\n  // Event callback handler for 'dataplotDragEnd' event.\\n  // Shows a message with the dateset, initial value and final value of the dragged column.\\n  dataplotDragEnd(eventObj, dataObj) {\\n    var prevValue = FusionCharts.formatNumber(dataObj.startValue.toFixed(2));\\n    var curValue = FusionCharts.formatNumber(dataObj.endValue.toFixed(2));\\n    var labelYear = this.state.chart.args.dataSource.categories[0].category[dataObj.dataIndex].label\\n    this.setState({\\n      message: [\\n        <strong>{eventObj.data.datasetName}</strong>,\\n        \\\" is modified to \\\",\\n        <strong>{'$' + curValue + 'M'}</strong>,\\n        \\\" from \\\",\\n        <strong>{'$' + prevValue + 'M'}</strong>,\\n        \\\" for \\\",\\n        <strong>{labelYear}</strong>\\n      ]\\n    });\\n  }\\n\\n  render () {\\n    return (\\n      <div>\\n        <ReactFC\\n          {...chartConfigs}\\n          fcEvent-dataplotDragEnd={this.dataplotDragEnd}\\n        />\\n        <p style={{ padding: '10px', background: '#f5f2f0' }}>\\n          {this.state.message}\\n        </p>\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default Onoff;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nclass Sidebar extends React.Component{\\n\\n  render(){\\n    return(\\n      <div className=\\\"sidebar\\\">\\n        <h1>React Dashboard</h1>\\n        <h2>Prototype</h2>\\n        <ul>\\n          <li onClick={this.props.fcclick}><a href=\\\"#fusion\\\"><i className=\\\"fas fa-chart-area\\\"></i>Dashboard</a></li>\\n          <li onClick={this.props.gcclick}><a href=\\\"#google\\\"><i className=\\\"fas fa-chart-pie\\\"></i>Google Charts</a></li>\\n          <li><a href=\\\"#plotly\\\"><i className=\\\"fas fa-chart-line\\\"></i>Plotly</a></li>\\n          <li onClick={this.props.fcclick}><a href=\\\"#fusion\\\"><i className=\\\"fas fa-chart-bar\\\"></i>Fushion Charts</a></li>\\n        </ul>\\n      </div>\\n    );\\n  }\\n}\\nexport default Sidebar;\\n\",\"import React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport FusionCharts from 'fusioncharts';\\nimport Charts from 'fusioncharts/fusioncharts.charts';\\nimport ReactFC from 'react-fusioncharts';\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\\n\\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\\n\\nconst chartConfigs = {\\n    type: 'pie3d',\\n    width: 500,\\n    height: 400,\\n    dataFormat: 'json',\\n    dataSource: {\\n        // Chart configuration\\n        \\\"chart\\\": {\\n            \\\"caption\\\": \\\"Countries With Most Oil Reserves [2017-18]\\\",\\n            \\\"subCaption\\\": \\\"In MMbbl = One Million barrels\\\",\\n            \\\"xAxisName\\\": \\\"Country\\\",\\n            \\\"yAxisName\\\": \\\"Reserves (MMbbl)\\\",\\n            \\\"numberSuffix\\\": \\\"K\\\",\\n            \\\"theme\\\": \\\"fusion\\\"\\n        },\\n        // Chart data\\n        \\\"data\\\": [{\\n            \\\"label\\\": \\\"Venezuela\\\",\\n            \\\"value\\\": \\\"290\\\"\\n        }, {\\n            \\\"label\\\": \\\"Saudi\\\",\\n            \\\"value\\\": \\\"260\\\"\\n        }, {\\n            \\\"label\\\": \\\"Canada\\\",\\n            \\\"value\\\": \\\"180\\\"\\n        }, {\\n            \\\"label\\\": \\\"Iran\\\",\\n            \\\"value\\\": \\\"140\\\"\\n        }, {\\n            \\\"label\\\": \\\"Russia\\\",\\n            \\\"value\\\": \\\"115\\\"\\n        }, {\\n            \\\"label\\\": \\\"UAE\\\",\\n            \\\"value\\\": \\\"100\\\"\\n        }, {\\n            \\\"label\\\": \\\"US\\\",\\n            \\\"value\\\": \\\"30\\\"\\n        }, {\\n            \\\"label\\\": \\\"China\\\",\\n            \\\"value\\\": \\\"30\\\"\\n        }]\\n    },\\n};\\n\\nclass Chart3d extends Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      chart: {},\\n      currentVal: 'column3d'\\n    };\\n\\n    this.renderComplete = this.renderComplete.bind(this);\\n    this.radioHandler = this.radioHandler.bind(this);\\n  }\\n\\n  renderComplete(chart) {\\n    this.setState({ chart });\\n  }\\n\\n  // Handler for radio buttons to change chart type.\\n  radioHandler(e) {\\n    this.state.chart.chartType(e.currentTarget.value);\\n    this.setState({\\n      currentVal: e.currentTarget.value\\n    });\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <ReactFC {...chartConfigs} onRender={this.renderComplete} />\\n        <br />\\n        <center>\\n          <span>Choose a chart type:</span>\\n          <div className=\\\"change-type\\\">\\n            <div>\\n              <input\\n                type=\\\"radio\\\"\\n                value=\\\"column3d\\\"\\n                onChange={this.radioHandler}\\n                checked={this.state.currentVal === 'column2d'} />\\n              <label>Column 3D Chart</label>\\n            </div>\\n            <div>\\n              <input\\n                type=\\\"radio\\\"\\n                value=\\\"bar3d\\\"\\n                onChange={this.radioHandler}\\n                checked={this.state.currentVal === 'bar2d'} />\\n              <label>Bar 3D Chart</label>\\n            </div>\\n            <div>\\n              <input\\n                type=\\\"radio\\\"\\n                value=\\\"pie3d\\\"\\n                onChange={this.radioHandler}\\n                checked={this.state.currentVal === 'pie2d'} />\\n              <label>Pie 3D Chart</label>\\n            </div>\\n          </div>\\n        </center>\\n      </div>\\n    );\\n  }\\n}\\nexport default Chart3d;\\n\",\"\\n// Step 1 - Including react\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\n// Step 2 - Including the react-fusioncharts component\\nimport ReactFC from 'react-fusioncharts';\\n\\n// Step 3 - Including the fusioncharts library\\nimport FusionCharts from 'fusioncharts';\\n\\n// Step 4 - Including the chart type\\nimport Column2D from 'fusioncharts/fusioncharts.charts';\\n\\n// Step 5 - Including the theme as fusion\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\\n\\n// Step 6 - Adding the chart as dependency to the core fusioncharts\\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\\n\\n// Step 7 - Creating the JSON object to store the chart configurations\\nconst chartConfigs = {\\n    type: 'column2d',// The chart type\\n    dataFormat: 'json', // Data type\\n    dataSource: {\\n        // Chart Configuration\\n        \\\"chart\\\": {\\n            \\\"caption\\\": \\\"Countries With Highest Air Pollution [2017-18]\\\",\\n            \\\"subCaption\\\": \\\"In PPM = Micrograms per cubic meter\\\",\\n            \\\"xAxisName\\\": \\\"Country\\\",\\n            \\\"yAxisName\\\": \\\"Median (PPM)\\\",\\n            \\\"numberSuffix\\\": \\\"K\\\",\\n            \\\"theme\\\": \\\"candy\\\",\\n            \\\"bgColor\\\": \\\"#262a33\\\",\\n            \\\"palettecolors\\\":\\\"5d62b5,29c3be,f2726f\\\",\\n            \\\"containerBackgroundOpacity\\\": \\\"0\\\",\\n        },\\n        // Chart Data\\n        \\\"data\\\": [{\\n            \\\"label\\\": \\\"Saudi Arabia\\\",\\n            \\\"value\\\": \\\"108\\\"\\n        }, {\\n            \\\"label\\\": \\\"Qatar\\\",\\n            \\\"value\\\": \\\"103\\\"\\n        }, {\\n            \\\"label\\\": \\\"Egypt\\\",\\n            \\\"value\\\": \\\"93\\\"\\n        }, {\\n            \\\"label\\\": \\\"Bangladesh\\\",\\n            \\\"value\\\": \\\"84\\\"\\n        }, {\\n            \\\"label\\\": \\\"Kuwait\\\",\\n            \\\"value\\\": \\\"75\\\"\\n        }, {\\n            \\\"label\\\": \\\"Cameroon\\\",\\n            \\\"value\\\": \\\"65\\\"\\n        }, {\\n            \\\"label\\\": \\\"Nepal\\\",\\n            \\\"value\\\": \\\"64\\\"\\n        }, {\\n            \\\"label\\\": \\\"UAE\\\",\\n            \\\"value\\\": \\\"64\\\"\\n        }]\\n    }\\n};\\n\\n// Step 8 - Creating the DOM element to pass the react-fusioncharts component\\nclass FusionBar extends React.Component {\\n  render() {\\n     return (\\n       <div className=\\\"chart\\\">\\n         <ReactFC\\n            {...chartConfigs} width={this.props.width} height={this.props.height}/>\\n        </div>\\n     );\\n  }\\n}\\n\\nexport default FusionBar;\\n\",\"\\n// Step 1 - Including react\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\n\\n// Step 2 - Including the react-fusioncharts component\\nimport ReactFC from 'react-fusioncharts';\\n\\n// Step 3 - Including the fusioncharts library\\nimport FusionCharts from 'fusioncharts';\\n\\n// Step 4 - Including the chart type\\nimport Column2D from 'fusioncharts/fusioncharts.charts';\\n\\n// Step 5 - Including the theme as fusion\\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\\n\\n// Step 6 - Adding the chart as dependency to the core fusioncharts\\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\\n\\n// Step 7 - Creating the JSON object to store the chart configurations\\nconst chartConfigs = {\\n    type: 'msline',// The chart type\\n    dataFormat: 'json', // Data type\\n    dataSource: {\\n        // Chart Configuration\\n        \\\"chart\\\": {\\n    \\\"caption\\\": \\\"Reach of Social Media Platforms amoung youth\\\",\\n    \\\"yaxisname\\\": \\\"% of youth on this platform\\\",\\n    \\\"subcaption\\\": \\\"2012-2016\\\",\\n    \\\"showhovereffect\\\": \\\"1\\\",\\n    \\\"numbersuffix\\\": \\\"%\\\",\\n    \\\"drawcrossline\\\": \\\"1\\\",\\n    \\\"plottooltext\\\": \\\"<b>$dataValue</b> of youth were on $seriesName\\\",\\n    \\\"theme\\\": \\\"candy\\\",\\n    \\\"palettecolors\\\":\\\"5d62b5,29c3be,f2726f\\\"\\n  },\\n  \\\"categories\\\": [\\n    {\\n      \\\"category\\\": [\\n        {\\n          \\\"label\\\": \\\"2012\\\"\\n        },\\n        {\\n          \\\"label\\\": \\\"2013\\\"\\n        },\\n        {\\n          \\\"label\\\": \\\"2014\\\"\\n        },\\n        {\\n          \\\"label\\\": \\\"2015\\\"\\n        },\\n        {\\n          \\\"label\\\": \\\"2016\\\"\\n        }\\n      ]\\n    }\\n  ],\\n  \\\"dataset\\\": [\\n    {\\n      \\\"seriesname\\\": \\\"Facebook\\\",\\n      \\\"data\\\": [\\n        {\\n          \\\"value\\\": \\\"62\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"64\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"64\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"66\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"78\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"seriesname\\\": \\\"Instagram\\\",\\n      \\\"data\\\": [\\n        {\\n          \\\"value\\\": \\\"16\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"28\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"34\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"42\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"54\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"seriesname\\\": \\\"LinkedIn\\\",\\n      \\\"data\\\": [\\n        {\\n          \\\"value\\\": \\\"20\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"22\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"27\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"22\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"29\\\"\\n        }\\n      ]\\n    },\\n    {\\n      \\\"seriesname\\\": \\\"Twitter\\\",\\n      \\\"data\\\": [\\n        {\\n          \\\"value\\\": \\\"18\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"19\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"21\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"21\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"24\\\"\\n        }\\n      ]\\n    }\\n  ]\\n    }\\n};\\n\\n// Step 8 - Creating the DOM element to pass the react-fusioncharts component\\nclass FusionLine extends React.Component {\\n  render() {\\n     return (\\n       <div className=\\\"chart\\\">\\n         <ReactFC\\n            {...chartConfigs} width={this.props.width} height={this.props.height}/>\\n        </div>\\n     );\\n  }\\n}\\n\\nexport default FusionLine;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport fusioncharts from 'fusioncharts';\\nimport charts from 'fusioncharts/fusioncharts.charts';\\nimport ReactFusioncharts from 'react-fusioncharts';\\n\\n// Resolves charts dependancy\\n\\nconst dataSource = {\\n  \\\"chart\\\": {\\n    \\\"caption\\\": \\\"Market Share of Web Servers\\\",\\n    \\\"plottooltext\\\": \\\"<b>$percentValue</b> of web servers run on $label servers\\\",\\n    \\\"showlegend\\\": \\\"1\\\",\\n    \\\"showpercentvalues\\\": \\\"1\\\",\\n    \\\"legendposition\\\": \\\"bottom\\\",\\n    \\\"usedataplotcolorforlabels\\\": \\\"1\\\",\\n    \\\"theme\\\": \\\"candy\\\",\\n    \\\"palettecolors\\\": \\\"#5d62b5,#ffc533,#f2726f,#29c3be\\\"\\n  },\\n  \\\"data\\\": [\\n    {\\n      \\\"label\\\": \\\"Apache\\\",\\n      \\\"value\\\": \\\"32647479\\\"\\n    },\\n    {\\n      \\\"label\\\": \\\"Microsoft\\\",\\n      \\\"value\\\": \\\"22100932\\\"\\n    },\\n    {\\n      \\\"label\\\": \\\"Zeus\\\",\\n      \\\"value\\\": \\\"8000600\\\"\\n    },\\n    {\\n      \\\"label\\\": \\\"Other\\\",\\n      \\\"value\\\": \\\"18674221\\\"\\n    }\\n  ]\\n};\\n\\nclass FusionPie extends React.Component {\\n   render() {\\n      return (\\n        <div className=\\\"chart\\\">\\n      <ReactFusioncharts\\n         type = \\\"pie2d\\\"\\n         width={this.props.width}\\n         height={this.props.height}\\n         dataFormat = \\\"JSON\\\"\\n         dataSource = {dataSource} />\\n         </div>\\n      );\\n   }\\n}\\nexport default FusionPie;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport fusioncharts from 'fusioncharts';\\nimport charts from 'fusioncharts/fusioncharts.charts';\\nimport ReactFusioncharts from 'react-fusioncharts';\\n\\nconst dataSource = {\\n  \\\"chart\\\": {\\n    \\\"caption\\\": \\\"Yearly Energy Production Rate\\\",\\n    \\\"subcaption\\\": \\\" Top 5 Developed Countries\\\",\\n    \\\"numbersuffix\\\": \\\" TWh\\\",\\n    \\\"showsum\\\": \\\"1\\\",\\n    \\\"plottooltext\\\": \\\"$label produces <b>$dataValue</b> of energy from $seriesName\\\",\\n    \\\"theme\\\": \\\"fusion\\\",\\n    \\\"drawcrossline\\\": \\\"1\\\",\\n    \\\"theme\\\": \\\"candy\\\",\\n    \\\"palettecolors\\\": \\\"#5d62b5,#ffc533,#f2726f,#29c3be,#62b58f\\\"\\n  },\\n  \\\"categories\\\": [\\n    {\\n      \\\"category\\\": [\\n        {\\n          \\\"label\\\": \\\"Canada\\\"\\n        },\\n        {\\n          \\\"label\\\": \\\"China\\\"\\n        },\\n        {\\n          \\\"label\\\": \\\"Russia\\\"\\n        },\\n        {\\n          \\\"label\\\": \\\"Australia\\\"\\n        },\\n        {\\n          \\\"label\\\": \\\"United States\\\"\\n        },\\n      ]\\n    }\\n  ],\\n  \\\"dataset\\\": [\\n    {\\n      \\\"seriesname\\\": \\\"Coal\\\",\\n      \\\"data\\\": [\\n        {\\n          \\\"value\\\": \\\"400\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"830\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"500\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"420\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"790\\\"\\n        },\\n      ]\\n    },\\n    {\\n      \\\"seriesname\\\": \\\"Hydro\\\",\\n      \\\"data\\\": [\\n        {\\n          \\\"value\\\": \\\"350\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"620\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"410\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"370\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"720\\\"\\n        },\\n\\n      ]\\n    },\\n    {\\n      \\\"seriesname\\\": \\\"Nuclear\\\",\\n      \\\"data\\\": [\\n        {\\n          \\\"value\\\": \\\"210\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"400\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"450\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"180\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"570\\\"\\n        },\\n      ]\\n    },\\n    {\\n      \\\"seriesname\\\": \\\"Gas\\\",\\n      \\\"data\\\": [\\n        {\\n          \\\"value\\\": \\\"180\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"330\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"230\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"160\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"440\\\"\\n        },\\n      ]\\n    },\\n    {\\n      \\\"seriesname\\\": \\\"Oil\\\",\\n      \\\"data\\\": [\\n        {\\n          \\\"value\\\": \\\"60\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"200\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"200\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"50\\\"\\n        },\\n        {\\n          \\\"value\\\": \\\"230\\\"\\n        },\\n      ]\\n    }\\n  ]\\n};\\n\\nclass FusionStack extends React.Component {\\n   render() {\\n      return (\\n        <div className=\\\"chart\\\">\\n      <ReactFusioncharts\\n         type = \\\"stackedcolumn2d\\\"\\n         width={this.props.width}\\n         height={this.props.height}\\n         dataFormat = \\\"JSON\\\"\\n         dataSource = {dataSource} />\\n         </div>\\n      );\\n   }\\n}\\nexport default FusionStack;\\n\",\"import React from 'react';\\nexport default class Today extends React.Component {\\n    constructor() {\\n        super();\\n        var today = new Date(),\\n            date = today.getDate() + '-' + (today.getMonth() + 1) + '-' + today.getFullYear();\\n\\n        this.state = {\\n            date: date\\n        };\\n    }\\n\\n    render() {\\n        return (\\n            <div className='date'>\\n                {this.state.date}\\n            </div>\\n        );\\n    }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport FusionBar from './FusionBar.js';\\nimport FusionLine from './FusionLine.js';\\nimport FusionPie from './FusionPie.js';\\nimport FusionStack from './FusionStack.js';\\nimport Today from './Today.js';\\n\\nclass FC extends React.Component{\\nrender(){\\n  return(\\n    <div id=\\\"fusion\\\" className=\\\"graphs\\\">\\n    <h1>Fusion Charts <Today /></h1>\\n    <FusionBar width={this.props.width} height={this.props.height}/>\\n    <FusionLine width={this.props.width} height={this.props.height}/>\\n    <FusionPie width={this.props.width} height={this.props.height}/>\\n    <FusionStack width={this.props.width} height={this.props.height}/>\\n\\n    </div>\\n  );\\n}\\n}\\nexport default FC;\\n\",\"import React from 'react';\\nimport './App.css';\\nimport { Chart } from \\\"react-google-charts\\\";\\nclass GoogleBar extends React.Component {\\n  render() {\\n\\n     return (\\n       <Chart className=\\\"chart\\\"\\n        chartType=\\\"ColumnChart\\\"\\n        spreadSheetUrl=\\\"https://docs.google.com/spreadsheets/d/1XWJLkAwch5GXAt_7zOFDcg8Wm8Xv29_8PWuuW15qmAE\\\"\\n        spreadSheetQueryParameters={{\\n         headers: 1,\\n         query: 'SELECT A, H, O, Q, R, U LIMIT 5 OFFSET 8',\\n        }}\\n        options={{\\n         hAxis: {\\n           textStyle:{color: '#FFF'}\\n         },\\n         vAxis: {\\n           format: 'long',\\n           textStyle:{color: '#FFF'}\\n         },\\n         titleTextStyle: {\\n        color: '#333333'\\n        },\\n\\n         backgroundColor: '#262a33',\\n         legendTextStyle: {color:'#FFF'},\\n         colors: ['#586ba4','#f5dd90','#f68e5f','#324376','#f76c5e'],\\n        }}\\n        rootProps={{ 'data-testid': '2' }}\\n        height={this.props.height}\\n        width={this.props.width}\\n        />\\n     );\\n  }\\n}\\nexport default GoogleBar;\\n\",\"import React from 'react';\\nimport './App.css';\\nimport { Chart } from \\\"react-google-charts\\\";\\nclass GoogleLine extends React.Component {\\n  render() {\\n     return (\\n       <Chart className=\\\"chart\\\"\\n         chartType=\\\"LineChart\\\"\\n         spreadSheetUrl=\\\"https://docs.google.com/spreadsheets/d/1vyi-Yd3JnvcYhKY6utMVGZcQa5TkW21nCMN8gx7GKi0/edit?usp=sharing\\\"\\n         options={{\\n           hAxis: {\\n             title: 'Year',\\n             format: '0000',\\n             textStyle:{color: '#FFF'}\\n           },\\n           vAxis: {\\n             title: 'CO2 Emissions',\\n             format: '000',\\n             textStyle:{color: '#FFF'}\\n           },\\n           chart:{\\n             title: 'CO2 Emission trends over 1998-2017',\\n             subtitle: 'Data Source: NASA',\\n           },\\n           backgroundColor: '#262a33',\\n           titleTextStyle: {\\n             color: '#333333'\\n           },\\n           colors: ['#f5dd90'],\\n           legendTextStyle: {color:'#FFF'},\\n         }}\\n         rootProps={{ 'data-testid': '1' }}\\n         height={this.props.height}\\n         width={this.props.width}\\n       />\\n     );\\n  }\\n}\\nexport default GoogleLine;\\n\",\"import React from 'react';\\nimport './App.css';\\nimport { Chart } from \\\"react-google-charts\\\";\\n\\nconst data_map = [\\n  [\\\"Country\\\", \\\"Popularity\\\"],\\n  [\\\"Germany\\\", 200],\\n  [\\\"United States\\\", 300],\\n  [\\\"Brazil\\\", 400],\\n  [\\\"Canada\\\", 500],\\n  [\\\"France\\\", 600],\\n  [\\\"RU\\\", 700]\\n];\\n\\nclass GoogleGeo extends React.Component {\\n  render() {\\n     return (\\n       <Chart\\n       className=\\\"chart\\\"\\n       chartType=\\\"GeoChart\\\"\\n       data={data_map}\\n       options={{\\n         backgroundColor: '#262a33',\\n         colors: ['#f76c5e'],\\n       }}\\n       chartEvents={[\\n         {\\n           eventName: \\\"select\\\",\\n           callback: ({ chartWrapper }) => {\\n             const chart = chartWrapper.getChart();\\n             const selection = chart.getSelection();\\n             if (selection.length === 0) return;\\n             const region = data_map[selection[0].row + 1];\\n             console.log(\\\"Selected : \\\" + region);\\n           }\\n         }\\n       ]}\\n       height={this.props.height}\\n       width={this.props.width}\\n\\n\\n       />\\n     );\\n  }\\n}\\nexport default GoogleGeo;\\n\",\"import React from 'react';\\nimport './App.css';\\nimport { Chart } from \\\"react-google-charts\\\";\\n\\nconst options = {\\n  title: \\\"Company Performance\\\",\\n  curveType: \\\"function\\\",\\n  legend: { position: \\\"bottom\\\" },\\n  hAxis: {\\n  textStyle:{color: '#FFF'},\\n  titleTextStyle: {\\n        color: '#fff'\\n    },\\n  },\\n  vAxis: {\\n    textStyle:{color: '#FFF'},\\n    titleTextStyle: {\\n          color: '#fff'\\n    },\\n  },\\n  backgroundColor: '#262a33',\\n  legendTextStyle: {color:'#FFF'},\\n  colors: ['#f5dd90','#f76c5e'],\\n  titleTextStyle: {\\n        color: '#fff',\\n  }\\n};\\nconst data = [\\n  [\\\"Year\\\", \\\"Sales\\\", \\\"Expenses\\\"],\\n  [\\\"2004\\\", 1000, 400],\\n  [\\\"2005\\\", 1170, 460],\\n  [\\\"2006\\\", 660, 1120],\\n  [\\\"2008\\\", 1030, 540],\\n  [\\\"2009\\\", 1000, 400],\\n  [\\\"2010\\\", 1170, 460],\\n  [\\\"2011\\\", 660, 1120],\\n  [\\\"2012\\\", 1030, 540]\\n];\\nclass GoogleScatter extends React.Component {\\n  render() {\\n     return (\\n         <Chart\\n         className=\\\"chart\\\"\\n         chartType=\\\"ScatterChart\\\"\\n         data={data}\\n         options={options}\\n         legendToggle\\n         height={this.props.height}\\n         width={this.props.width}\\n         />\\n     );\\n  }\\n}\\nexport default GoogleScatter;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport GoogleBar from './GoogleBar.js';\\nimport GoogleLine from './GoogleLine.js';\\nimport GoogleGeo from './GoogleGeo.js';\\nimport GoogleScatter from './GoogleScatter.js';\\n\\nclass GC extends React.Component{\\n\\n render(){\\n  return(\\n    <div id=\\\"gc\\\" className=\\\"graphs\\\">\\n    <h1>Google Charts</h1>\\n    <GoogleBar width={this.props.width} height={this.props.height} />\\n    <GoogleLine width={this.props.width} height={this.props.height} />\\n    <GoogleGeo width={this.props.width} height={this.props.height} />\\n    <GoogleScatter width={this.props.width} height={this.props.height} />\\n    </div>\\n  );\\n}\\n}\\nexport default GC;\\n\",\"import React from 'react';\\nimport Plot from 'react-plotly.js';\\nimport './App.css';\\nimport { Chart } from \\\"react-google-charts\\\";\\nimport Donut from './Donut.js';\\nimport Multiple from './Multiple.js';\\nimport Event from './Event.js';\\nimport Onoff from './Onoff.js';\\nimport Sidebar from './Sidebar.js';\\nimport Chart3d from './Chart3d.js';\\nimport FC from './FC.js';\\nimport GC from './GC.js';\\n\\nclass App extends React.Component {\\n  constructor(){\\n    super();\\n    this.state = {\\n      width:\\\"100%\\\",\\n      height: \\\"400px\\\",\\n      showGC:false,\\n      showFC:true,\\n    }\\n  }\\n  getInitialState() {\\n          return { showGC: false, showFC:true };\\n  }\\n  GConClick() {\\n            this.setState({ showGC: true, showFC:false});\\n  }\\n  FConClick() {\\n            this.setState({ showGC: false, showFC: true });\\n  }\\n  render() {\\n    return (\\n      <div className=\\\"wrapper\\\">\\n        <Sidebar gcclick={this.GConClick.bind(this)} fcclick={this.FConClick.bind(this)} />\\n        <div>\\n        { this.state.showFC ? <FC width={this.state.width} height={this.state.height}/>: null }\\n        { this.state.showGC ? <GC  width={this.state.width} height={this.state.height}/> : null }\\n\\n        </div>\\n    </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,a,t){},20:function(e,a,t){e.exports=t(40)},25:function(e,a,t){},40:function(e,a,t){\"use strict\";t.r(a);var l=t(0),r=t.n(l),o=t(9),n=t.n(o),i=(t(25),t(1)),s=t(2),c=t(5),h=t(3),u=t(4),b=(t(27),t(13),t(11)),d=[[\"Task\",\"Hours per Day\"],[\"Work\",11],[\"Eat\",2],[\"Commute\",2],[\"Watch TV\",2],[\"Sleep\",7]],p={title:\"My Daily Activities\",pieHole:.4,is3D:!0},m=(r.a.Component,t(7)),v=t(8),f=t.n(v),g=t(10),y=t.n(g),O=t(6),C=t.n(O),w=t(12),j=t.n(w);C.a.fcRoot(f.a,y.a,j.a);var E={type:\"pie2d\",width:500,height:400,dataFormat:\"json\",dataSource:{chart:{caption:\"Countries With Most Oil Reserves [2017-18]\",subCaption:\"In MMbbl = One Million barrels\",xAxisName:\"Country\",yAxisName:\"Reserves (MMbbl)\",numberSuffix:\"K\",theme:\"fusion\"},data:[{label:\"Venezuela\",value:\"290\"},{label:\"Saudi\",value:\"260\"},{label:\"Canada\",value:\"180\"},{label:\"Iran\",value:\"140\"},{label:\"Russia\",value:\"115\"},{label:\"UAE\",value:\"100\"},{label:\"US\",value:\"30\"},{label:\"China\",value:\"30\"}]}};l.Component;C.a.fcRoot(f.a,y.a,j.a);var S={type:\"column2d\",width:\"500\",height:\"400\",dataFormat:\"json\",dataSource:{chart:{caption:\"Countries With Most Oil Reserves [2017-18]\",subCaption:\"In MMbbl = One Million barrels\",xAxisName:\"Country\",yAxisName:\"Reserves (MMbbl)\",numberSuffix:\"K\",theme:\"fusion\"},data:[{label:\"Venezuela\",value:\"290\"},{label:\"Saudi\",value:\"260\"},{label:\"Canada\",value:\"180\"},{label:\"Iran\",value:\"140\"},{label:\"Russia\",value:\"115\"},{label:\"UAE\",value:\"100\"},{label:\"US\",value:\"30\"},{label:\"China\",value:\"30\"}]}},x=(l.Component,t(19)),F=t.n(x);C.a.fcRoot(f.a,F.a,j.a);var k={type:\"dragcolumn2d\",width:500,height:400,dataFormat:\"json\",dataSource:{chart:{caption:\"Android and iOS Devices Sales Projections\",subCaption:\"Drag the top of columns to adjust projections for 2017 & 2018\",numberPrefix:\"$\",numberSuffix:\"M\",yaxismaxvalue:\"200\",theme:\"fusion\",plotToolText:\"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"},categories:[{category:[{label:\"2014\",fontItalic:\"0\"},{label:\"2015\",fontItalic:\"0\"},{label:\"2016\",fontItalic:\"0\"},{label:\"2017 (Projected)\"},{label:\"2018 (Projected)\"}]}],dataset:[{seriesname:\"Android Devices\",data:[{value:\"73\",alpha:\"100\",allowDrag:\"0\"},{value:\"80\",alpha:\"100\",allowDrag:\"0\"},{value:\"97\",alpha:\"100\",allowDrag:\"0\"},{value:\"110\",toolText:\"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"},{value:\"180\",toolText:\"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"}]},{seriesname:\"iOS Devices\",data:[{value:\"63.2\",alpha:\"100\",allowDrag:\"0\"},{value:\"68\",alpha:\"100\",allowDrag:\"0\"},{value:\"82\",alpha:\"100\",allowDrag:\"0\"},{value:\"99\",toolText:\"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"},{value:\"150\",toolText:\"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"}]}]}},N=(l.Component,function(e){function a(){return Object(i.a)(this,a),Object(c.a)(this,Object(h.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"sidebar\"},r.a.createElement(\"h1\",null,\"React Dashboard\"),r.a.createElement(\"h2\",null,\"Prototype\"),r.a.createElement(\"ul\",null,r.a.createElement(\"li\",{onClick:this.props.fcclick},r.a.createElement(\"a\",{href:\"#fusion\"},r.a.createElement(\"i\",{className:\"fas fa-chart-area\"}),\"Dashboard\")),r.a.createElement(\"li\",{onClick:this.props.gcclick},r.a.createElement(\"a\",{href:\"#google\"},r.a.createElement(\"i\",{className:\"fas fa-chart-pie\"}),\"Google Charts\")),r.a.createElement(\"li\",null,r.a.createElement(\"a\",{href:\"#plotly\"},r.a.createElement(\"i\",{className:\"fas fa-chart-line\"}),\"Plotly\")),r.a.createElement(\"li\",{onClick:this.props.fcclick},r.a.createElement(\"a\",{href:\"#fusion\"},r.a.createElement(\"i\",{className:\"fas fa-chart-bar\"}),\"Fushion Charts\"))))}}]),a}(r.a.Component));C.a.fcRoot(f.a,y.a,j.a);var A={type:\"pie3d\",width:500,height:400,dataFormat:\"json\",dataSource:{chart:{caption:\"Countries With Most Oil Reserves [2017-18]\",subCaption:\"In MMbbl = One Million barrels\",xAxisName:\"Country\",yAxisName:\"Reserves (MMbbl)\",numberSuffix:\"K\",theme:\"fusion\"},data:[{label:\"Venezuela\",value:\"290\"},{label:\"Saudi\",value:\"260\"},{label:\"Canada\",value:\"180\"},{label:\"Iran\",value:\"140\"},{label:\"Russia\",value:\"115\"},{label:\"UAE\",value:\"100\"},{label:\"US\",value:\"30\"},{label:\"China\",value:\"30\"}]}},M=(l.Component,t(14)),T=t.n(M);C.a.fcRoot(f.a,y.a,T.a);var $={type:\"column2d\",dataFormat:\"json\",dataSource:{chart:{caption:\"Countries With Highest Air Pollution [2017-18]\",subCaption:\"In PPM = Micrograms per cubic meter\",xAxisName:\"Country\",yAxisName:\"Median (PPM)\",numberSuffix:\"K\",theme:\"candy\",bgColor:\"#262a33\",palettecolors:\"5d62b5,29c3be,f2726f\",containerBackgroundOpacity:\"0\"},data:[{label:\"Saudi Arabia\",value:\"108\"},{label:\"Qatar\",value:\"103\"},{label:\"Egypt\",value:\"93\"},{label:\"Bangladesh\",value:\"84\"},{label:\"Kuwait\",value:\"75\"},{label:\"Cameroon\",value:\"65\"},{label:\"Nepal\",value:\"64\"},{label:\"UAE\",value:\"64\"}]}},R=function(e){function a(){return Object(i.a)(this,a),Object(c.a)(this,Object(h.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"chart\"},r.a.createElement(C.a,Object.assign({},$,{width:this.props.width,height:this.props.height})))}}]),a}(r.a.Component);C.a.fcRoot(f.a,y.a,T.a);var D,P={type:\"msline\",dataFormat:\"json\",dataSource:{chart:{caption:\"Reach of Social Media Platforms amoung youth\",yaxisname:\"% of youth on this platform\",subcaption:\"2012-2016\",showhovereffect:\"1\",numbersuffix:\"%\",drawcrossline:\"1\",plottooltext:\"<b>$dataValue</b> of youth were on $seriesName\",theme:\"candy\",palettecolors:\"5d62b5,29c3be,f2726f\"},categories:[{category:[{label:\"2012\"},{label:\"2013\"},{label:\"2014\"},{label:\"2015\"},{label:\"2016\"}]}],dataset:[{seriesname:\"Facebook\",data:[{value:\"62\"},{value:\"64\"},{value:\"64\"},{value:\"66\"},{value:\"78\"}]},{seriesname:\"Instagram\",data:[{value:\"16\"},{value:\"28\"},{value:\"34\"},{value:\"42\"},{value:\"54\"}]},{seriesname:\"LinkedIn\",data:[{value:\"20\"},{value:\"22\"},{value:\"27\"},{value:\"22\"},{value:\"29\"}]},{seriesname:\"Twitter\",data:[{value:\"18\"},{value:\"19\"},{value:\"21\"},{value:\"21\"},{value:\"24\"}]}]}},I=function(e){function a(){return Object(i.a)(this,a),Object(c.a)(this,Object(h.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"chart\"},r.a.createElement(C.a,Object.assign({},P,{width:this.props.width,height:this.props.height})))}}]),a}(r.a.Component),W={chart:{caption:\"Market Share of Web Servers\",plottooltext:\"<b>$percentValue</b> of web servers run on $label servers\",showlegend:\"1\",showpercentvalues:\"1\",legendposition:\"bottom\",usedataplotcolorforlabels:\"1\",theme:\"candy\",palettecolors:\"#5d62b5,#ffc533,#f2726f,#29c3be\"},data:[{label:\"Apache\",value:\"32647479\"},{label:\"Microsoft\",value:\"22100932\"},{label:\"Zeus\",value:\"8000600\"},{label:\"Other\",value:\"18674221\"}]},G=function(e){function a(){return Object(i.a)(this,a),Object(c.a)(this,Object(h.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"chart\"},r.a.createElement(C.a,{type:\"pie2d\",width:this.props.width,height:this.props.height,dataFormat:\"JSON\",dataSource:W}))}}]),a}(r.a.Component),U=t(15),V={chart:(D={caption:\"Yearly Energy Production Rate\",subcaption:\" Top 5 Developed Countries\",numbersuffix:\" TWh\",showsum:\"1\",plottooltext:\"$label produces <b>$dataValue</b> of energy from $seriesName\",theme:\"fusion\",drawcrossline:\"1\"},Object(U.a)(D,\"theme\",\"candy\"),Object(U.a)(D,\"palettecolors\",\"#5d62b5,#ffc533,#f2726f,#29c3be,#62b58f\"),D),categories:[{category:[{label:\"Canada\"},{label:\"China\"},{label:\"Russia\"},{label:\"Australia\"},{label:\"United States\"}]}],dataset:[{seriesname:\"Coal\",data:[{value:\"400\"},{value:\"830\"},{value:\"500\"},{value:\"420\"},{value:\"790\"}]},{seriesname:\"Hydro\",data:[{value:\"350\"},{value:\"620\"},{value:\"410\"},{value:\"370\"},{value:\"720\"}]},{seriesname:\"Nuclear\",data:[{value:\"210\"},{value:\"400\"},{value:\"450\"},{value:\"180\"},{value:\"570\"}]},{seriesname:\"Gas\",data:[{value:\"180\"},{value:\"330\"},{value:\"230\"},{value:\"160\"},{value:\"440\"}]},{seriesname:\"Oil\",data:[{value:\"60\"},{value:\"200\"},{value:\"200\"},{value:\"50\"},{value:\"230\"}]}]},K=function(e){function a(){return Object(i.a)(this,a),Object(c.a)(this,Object(h.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"chart\"},r.a.createElement(C.a,{type:\"stackedcolumn2d\",width:this.props.width,height:this.props.height,dataFormat:\"JSON\",dataSource:V}))}}]),a}(r.a.Component),Y=function(e){function a(){var e;Object(i.a)(this,a),e=Object(c.a)(this,Object(h.a)(a).call(this));var t=new Date,l=t.getDate()+\"-\"+(t.getMonth()+1)+\"-\"+t.getFullYear();return e.state={date:l},e}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"date\"},this.state.date)}}]),a}(r.a.Component),J=function(e){function a(){return Object(i.a)(this,a),Object(c.a)(this,Object(h.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{id:\"fusion\",className:\"graphs\"},r.a.createElement(\"h1\",null,\"Fusion Charts \",r.a.createElement(Y,null)),r.a.createElement(R,{width:this.props.width,height:this.props.height}),r.a.createElement(I,{width:this.props.width,height:this.props.height}),r.a.createElement(G,{width:this.props.width,height:this.props.height}),r.a.createElement(K,{width:this.props.width,height:this.props.height}))}}]),a}(r.a.Component),z=function(e){function a(){return Object(i.a)(this,a),Object(c.a)(this,Object(h.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return r.a.createElement(b.a,{className:\"chart\",chartType:\"ColumnChart\",spreadSheetUrl:\"https://docs.google.com/spreadsheets/d/1XWJLkAwch5GXAt_7zOFDcg8Wm8Xv29_8PWuuW15qmAE\",spreadSheetQueryParameters:{headers:1,query:\"SELECT A, H, O, Q, R, U LIMIT 5 OFFSET 8\"},options:{hAxis:{textStyle:{color:\"#FFF\"}},vAxis:{format:\"long\",textStyle:{color:\"#FFF\"}},titleTextStyle:{color:\"#333333\"},backgroundColor:\"#262a33\",legendTextStyle:{color:\"#FFF\"},colors:[\"#586ba4\",\"#f5dd90\",\"#f68e5f\",\"#324376\",\"#f76c5e\"]},rootProps:{\"data-testid\":\"2\"},height:this.props.height,width:this.props.width})}}]),a}(r.a.Component),B=function(e){function a(){return Object(i.a)(this,a),Object(c.a)(this,Object(h.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return r.a.createElement(b.a,{className:\"chart\",chartType:\"LineChart\",spreadSheetUrl:\"https://docs.google.com/spreadsheets/d/1vyi-Yd3JnvcYhKY6utMVGZcQa5TkW21nCMN8gx7GKi0/edit?usp=sharing\",options:{hAxis:{title:\"Year\",format:\"0000\",textStyle:{color:\"#FFF\"}},vAxis:{title:\"CO2 Emissions\",format:\"000\",textStyle:{color:\"#FFF\"}},chart:{title:\"CO2 Emission trends over 1998-2017\",subtitle:\"Data Source: NASA\"},backgroundColor:\"#262a33\",titleTextStyle:{color:\"#333333\"},colors:[\"#f5dd90\"],legendTextStyle:{color:\"#FFF\"}},rootProps:{\"data-testid\":\"1\"},height:this.props.height,width:this.props.width})}}]),a}(r.a.Component),H=[[\"Country\",\"Popularity\"],[\"Germany\",200],[\"United States\",300],[\"Brazil\",400],[\"Canada\",500],[\"France\",600],[\"RU\",700]],L=function(e){function a(){return Object(i.a)(this,a),Object(c.a)(this,Object(h.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return r.a.createElement(b.a,{className:\"chart\",chartType:\"GeoChart\",data:H,options:{backgroundColor:\"#262a33\",colors:[\"#f76c5e\"]},chartEvents:[{eventName:\"select\",callback:function(e){var a=e.chartWrapper.getChart().getSelection();if(0!==a.length){var t=H[a[0].row+1];console.log(\"Selected : \"+t)}}}],height:this.props.height,width:this.props.width})}}]),a}(r.a.Component),Q={title:\"Company Performance\",curveType:\"function\",legend:{position:\"bottom\"},hAxis:{textStyle:{color:\"#FFF\"},titleTextStyle:{color:\"#fff\"}},vAxis:{textStyle:{color:\"#FFF\"},titleTextStyle:{color:\"#fff\"}},backgroundColor:\"#262a33\",legendTextStyle:{color:\"#FFF\"},colors:[\"#f5dd90\",\"#f76c5e\"],titleTextStyle:{color:\"#fff\"}},X=[[\"Year\",\"Sales\",\"Expenses\"],[\"2004\",1e3,400],[\"2005\",1170,460],[\"2006\",660,1120],[\"2008\",1030,540],[\"2009\",1e3,400],[\"2010\",1170,460],[\"2011\",660,1120],[\"2012\",1030,540]],q=function(e){function a(){return Object(i.a)(this,a),Object(c.a)(this,Object(h.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return r.a.createElement(b.a,{className:\"chart\",chartType:\"ScatterChart\",data:X,options:Q,legendToggle:!0,height:this.props.height,width:this.props.width})}}]),a}(r.a.Component),Z=function(e){function a(){return Object(i.a)(this,a),Object(c.a)(this,Object(h.a)(a).apply(this,arguments))}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{id:\"gc\",className:\"graphs\"},r.a.createElement(\"h1\",null,\"Google Charts\"),r.a.createElement(z,{width:this.props.width,height:this.props.height}),r.a.createElement(B,{width:this.props.width,height:this.props.height}),r.a.createElement(L,{width:this.props.width,height:this.props.height}),r.a.createElement(q,{width:this.props.width,height:this.props.height}))}}]),a}(r.a.Component),_=function(e){function a(){var e;return Object(i.a)(this,a),(e=Object(c.a)(this,Object(h.a)(a).call(this))).state={width:\"100%\",height:\"400px\",showGC:!1,showFC:!0},e}return Object(u.a)(a,e),Object(s.a)(a,[{key:\"getInitialState\",value:function(){return{showGC:!1,showFC:!0}}},{key:\"GConClick\",value:function(){this.setState({showGC:!0,showFC:!1})}},{key:\"FConClick\",value:function(){this.setState({showGC:!1,showFC:!0})}},{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"wrapper\"},r.a.createElement(N,{gcclick:this.GConClick.bind(this),fcclick:this.FConClick.bind(this)}),r.a.createElement(\"div\",null,this.state.showFC?r.a.createElement(J,{width:this.state.width,height:this.state.height}):null,this.state.showGC?r.a.createElement(Z,{width:this.state.width,height:this.state.height}):null))}}]),a}(r.a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n.a.render(r.a.createElement(_,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[20,2,1]]]);","extractedComments":[]}