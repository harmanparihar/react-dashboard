{"ast":null,"code":"import _classCallCheck from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/final-netlify-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/final-netlify-dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/final-netlify-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/final-netlify-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/final-netlify-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/final-netlify-dashboard/src/GoogleGeo.js\";\nimport React from 'react';\nimport './App.css';\nimport { Chart } from \"react-google-charts\";\nvar data_map = [[\"Country\", \"Popularity\"], [\"Germany\", 200], [\"United States\", 300], [\"Brazil\", 400], [\"Canada\", 500], [\"France\", 600], [\"RU\", 700]];\n\nvar GoogleGeo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleGeo, _React$Component);\n\n  function GoogleGeo() {\n    _classCallCheck(this, GoogleGeo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GoogleGeo).apply(this, arguments));\n  }\n\n  _createClass(GoogleGeo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Chart, {\n        className: \"chart\",\n        chartType: \"GeoChart\",\n        data: data_map,\n        options: {\n          backgroundColor: '#262a33',\n          colors: ['#f76c5e']\n        },\n        chartEvents: [{\n          eventName: \"select\",\n          callback: function callback(_ref) {\n            var chartWrapper = _ref.chartWrapper;\n            var chart = chartWrapper.getChart();\n            var selection = chart.getSelection();\n            if (selection.length === 0) return;\n            var region = data_map[selection[0].row + 1];\n            console.log(\"Selected : \" + region);\n          }\n        }],\n        height: this.props.height,\n        width: this.props.width,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return GoogleGeo;\n}(React.Component);\n\nexport default GoogleGeo;","map":{"version":3,"sources":["/Users/harman/Documents/Term-3/Directed-Studies/Prototype/final-netlify-dashboard/src/GoogleGeo.js"],"names":["React","Chart","data_map","GoogleGeo","backgroundColor","colors","eventName","callback","chartWrapper","chart","getChart","selection","getSelection","length","region","row","console","log","props","height","width","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAEA,IAAMC,QAAQ,GAAG,CACf,CAAC,SAAD,EAAY,YAAZ,CADe,EAEf,CAAC,SAAD,EAAY,GAAZ,CAFe,EAGf,CAAC,eAAD,EAAkB,GAAlB,CAHe,EAIf,CAAC,QAAD,EAAW,GAAX,CAJe,EAKf,CAAC,QAAD,EAAW,GAAX,CALe,EAMf,CAAC,QAAD,EAAW,GAAX,CANe,EAOf,CAAC,IAAD,EAAO,GAAP,CAPe,CAAjB;;IAUMC,S;;;;;;;;;;;;;6BACK;AACN,aACE,oBAAC,KAAD;AACA,QAAA,SAAS,EAAC,OADV;AAEA,QAAA,SAAS,EAAC,UAFV;AAGA,QAAA,IAAI,EAAED,QAHN;AAIA,QAAA,OAAO,EAAE;AACPE,UAAAA,eAAe,EAAE,SADV;AAEPC,UAAAA,MAAM,EAAE,CAAC,SAAD;AAFD,SAJT;AAQA,QAAA,WAAW,EAAE,CACX;AACEC,UAAAA,SAAS,EAAE,QADb;AAEEC,UAAAA,QAAQ,EAAE,wBAAsB;AAAA,gBAAnBC,YAAmB,QAAnBA,YAAmB;AAC9B,gBAAMC,KAAK,GAAGD,YAAY,CAACE,QAAb,EAAd;AACA,gBAAMC,SAAS,GAAGF,KAAK,CAACG,YAAN,EAAlB;AACA,gBAAID,SAAS,CAACE,MAAV,KAAqB,CAAzB,EAA4B;AAC5B,gBAAMC,MAAM,GAAGZ,QAAQ,CAACS,SAAS,CAAC,CAAD,CAAT,CAAaI,GAAb,GAAmB,CAApB,CAAvB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBH,MAA5B;AACD;AARH,SADW,CARb;AAoBA,QAAA,MAAM,EAAE,KAAKI,KAAL,CAAWC,MApBnB;AAqBA,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KArBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AA2BF;;;;EA7BqBpB,KAAK,CAACqB,S;;AA+B9B,eAAelB,SAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Chart } from \"react-google-charts\";\n\nconst data_map = [\n  [\"Country\", \"Popularity\"],\n  [\"Germany\", 200],\n  [\"United States\", 300],\n  [\"Brazil\", 400],\n  [\"Canada\", 500],\n  [\"France\", 600],\n  [\"RU\", 700]\n];\n\nclass GoogleGeo extends React.Component {\n  render() {\n     return (\n       <Chart\n       className=\"chart\"\n       chartType=\"GeoChart\"\n       data={data_map}\n       options={{\n         backgroundColor: '#262a33',\n         colors: ['#f76c5e'],\n       }}\n       chartEvents={[\n         {\n           eventName: \"select\",\n           callback: ({ chartWrapper }) => {\n             const chart = chartWrapper.getChart();\n             const selection = chart.getSelection();\n             if (selection.length === 0) return;\n             const region = data_map[selection[0].row + 1];\n             console.log(\"Selected : \" + region);\n           }\n         }\n       ]}\n       height={this.props.height}\n       width={this.props.width}\n\n\n       />\n     );\n  }\n}\nexport default GoogleGeo;\n"]},"metadata":{},"sourceType":"module"}