{"ast":null,"code":"import _classCallCheck from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/Chart3d.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\nvar chartConfigs = {\n  type: 'pie3d',\n  width: 500,\n  height: 400,\n  dataFormat: 'json',\n  dataSource: {\n    // Chart configuration\n    \"chart\": {\n      \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\n      \"subCaption\": \"In MMbbl = One Million barrels\",\n      \"xAxisName\": \"Country\",\n      \"yAxisName\": \"Reserves (MMbbl)\",\n      \"numberSuffix\": \"K\",\n      \"theme\": \"fusion\"\n    },\n    // Chart data\n    \"data\": [{\n      \"label\": \"Venezuela\",\n      \"value\": \"290\"\n    }, {\n      \"label\": \"Saudi\",\n      \"value\": \"260\"\n    }, {\n      \"label\": \"Canada\",\n      \"value\": \"180\"\n    }, {\n      \"label\": \"Iran\",\n      \"value\": \"140\"\n    }, {\n      \"label\": \"Russia\",\n      \"value\": \"115\"\n    }, {\n      \"label\": \"UAE\",\n      \"value\": \"100\"\n    }, {\n      \"label\": \"US\",\n      \"value\": \"30\"\n    }, {\n      \"label\": \"China\",\n      \"value\": \"30\"\n    }]\n  }\n};\n\nvar Chart3d =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart3d, _Component);\n\n  function Chart3d(props) {\n    var _this;\n\n    _classCallCheck(this, Chart3d);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart3d).call(this, props));\n    _this.state = {\n      chart: {},\n      currentVal: 'column3d'\n    };\n    _this.renderComplete = _this.renderComplete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.radioHandler = _this.radioHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Chart3d, [{\n    key: \"renderComplete\",\n    value: function renderComplete(chart) {\n      this.setState({\n        chart: chart\n      });\n    } // Handler for radio buttons to change chart type.\n\n  }, {\n    key: \"radioHandler\",\n    value: function radioHandler(e) {\n      this.state.chart.chartType(e.currentTarget.value);\n      this.setState({\n        currentVal: e.currentTarget.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n        onRender: this.renderComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Choose a chart type:\"), React.createElement(\"div\", {\n        className: \"change-type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"column3d\",\n        onChange: this.radioHandler,\n        checked: this.state.currentVal === 'column2d',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Column 3D Chart\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"bar3d\",\n        onChange: this.radioHandler,\n        checked: this.state.currentVal === 'bar2d',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Bar 3D Chart\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"pie3d\",\n        onChange: this.radioHandler,\n        checked: this.state.currentVal === 'pie2d',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Pie 3D Chart\")))));\n    }\n  }]);\n\n  return Chart3d;\n}(Component);\n\nexport default Chart3d;","map":{"version":3,"sources":["/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/Chart3d.js"],"names":["React","Component","ReactDOM","FusionCharts","Charts","ReactFC","FusionTheme","fcRoot","chartConfigs","type","width","height","dataFormat","dataSource","Chart3d","props","state","chart","currentVal","renderComplete","bind","radioHandler","setState","e","chartType","currentTarget","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\nconst chartConfigs = {\n    type: 'pie3d',\n    width: 500,\n    height: 400,\n    dataFormat: 'json',\n    dataSource: {\n        // Chart configuration\n        \"chart\": {\n            \"caption\": \"Countries With Most Oil Reserves [2017-18]\",\n            \"subCaption\": \"In MMbbl = One Million barrels\",\n            \"xAxisName\": \"Country\",\n            \"yAxisName\": \"Reserves (MMbbl)\",\n            \"numberSuffix\": \"K\",\n            \"theme\": \"fusion\"\n        },\n        // Chart data\n        \"data\": [{\n            \"label\": \"Venezuela\",\n            \"value\": \"290\"\n        }, {\n            \"label\": \"Saudi\",\n            \"value\": \"260\"\n        }, {\n            \"label\": \"Canada\",\n            \"value\": \"180\"\n        }, {\n            \"label\": \"Iran\",\n            \"value\": \"140\"\n        }, {\n            \"label\": \"Russia\",\n            \"value\": \"115\"\n        }, {\n            \"label\": \"UAE\",\n            \"value\": \"100\"\n        }, {\n            \"label\": \"US\",\n            \"value\": \"30\"\n        }, {\n            \"label\": \"China\",\n            \"value\": \"30\"\n        }]\n    },\n};\n\nclass Chart3d extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chart: {},\n      currentVal: 'column3d'\n    };\n\n    this.renderComplete = this.renderComplete.bind(this);\n    this.radioHandler = this.radioHandler.bind(this);\n  }\n\n  renderComplete(chart) {\n    this.setState({ chart });\n  }\n\n  // Handler for radio buttons to change chart type.\n  radioHandler(e) {\n    this.state.chart.chartType(e.currentTarget.value);\n    this.setState({\n      currentVal: e.currentTarget.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC {...chartConfigs} onRender={this.renderComplete} />\n        <br />\n        <center>\n          <span>Choose a chart type:</span>\n          <div className=\"change-type\">\n            <div>\n              <input\n                type=\"radio\"\n                value=\"column3d\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'column2d'} />\n              <label>Column 3D Chart</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"bar3d\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'bar2d'} />\n              <label>Bar 3D Chart</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"pie3d\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'pie2d'} />\n              <label>Pie 3D Chart</label>\n            </div>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\nexport default Chart3d;\n"]},"metadata":{},"sourceType":"module"}