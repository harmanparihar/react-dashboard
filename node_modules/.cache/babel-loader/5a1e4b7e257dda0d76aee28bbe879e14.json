{"ast":null,"code":"import _classCallCheck from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/FusionBar.js\";\n// Step 1 - Including react\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // Step 2 - Including the react-fusioncharts component\n\nimport ReactFC from 'react-fusioncharts'; // Step 3 - Including the fusioncharts library\n\nimport FusionCharts from 'fusioncharts'; // Step 4 - Including the chart type\n\nimport Column2D from 'fusioncharts/fusioncharts.charts'; // Step 5 - Including the theme as fusion\n\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.candy'; // Step 6 - Adding the chart as dependency to the core fusioncharts\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme); // Step 7 - Creating the JSON object to store the chart configurations\n\nvar chartConfigs = {\n  type: 'column2d',\n  // The chart type\n  dataFormat: 'json',\n  // Data type\n  dataSource: {\n    // Chart Configuration\n    \"chart\": {\n      \"caption\": \"Countries With Highest Air Pollution [2017-18]\",\n      \"subCaption\": \"In PPM = Micrograms per cubic meter\",\n      \"xAxisName\": \"Country\",\n      \"yAxisName\": \"Median (PPM)\",\n      \"numberSuffix\": \"K\",\n      \"theme\": \"candy\",\n      \"bgColor\": \"#262a33\",\n      \"palettecolors\": \"5d62b5,29c3be,f2726f\",\n      \"containerBackgroundOpacity\": \"0\"\n    },\n    // Chart Data\n    \"data\": [{\n      \"label\": \"Saudi Arabia\",\n      \"value\": \"108\"\n    }, {\n      \"label\": \"Qatar\",\n      \"value\": \"103\"\n    }, {\n      \"label\": \"Egypt\",\n      \"value\": \"93\"\n    }, {\n      \"label\": \"Bangladesh\",\n      \"value\": \"84\"\n    }, {\n      \"label\": \"Kuwait\",\n      \"value\": \"75\"\n    }, {\n      \"label\": \"Cameroon\",\n      \"value\": \"65\"\n    }, {\n      \"label\": \"Nepal\",\n      \"value\": \"64\"\n    }, {\n      \"label\": \"UAE\",\n      \"value\": \"64\"\n    }]\n  }\n}; // Step 8 - Creating the DOM element to pass the react-fusioncharts component\n\nvar FusionBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FusionBar, _React$Component);\n\n  function FusionBar() {\n    _classCallCheck(this, FusionBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FusionBar).apply(this, arguments));\n  }\n\n  _createClass(FusionBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n        width: this.props.width,\n        height: this.props.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FusionBar;\n}(React.Component);\n\nexport default FusionBar;","map":{"version":3,"sources":["/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/FusionBar.js"],"names":["React","ReactDOM","ReactFC","FusionCharts","Column2D","FusionTheme","fcRoot","chartConfigs","type","dataFormat","dataSource","FusionBar","props","width","height","Component"],"mappings":";;;;;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,cAAzB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,kCAArB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,8CAAxB,C,CAEA;;AACAH,OAAO,CAACI,MAAR,CAAeH,YAAf,EAA6BC,QAA7B,EAAuCC,WAAvC,E,CAEA;;AACA,IAAME,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,UADW;AACA;AACjBC,EAAAA,UAAU,EAAE,MAFK;AAEG;AACpBC,EAAAA,UAAU,EAAE;AACR;AACA,aAAS;AACL,iBAAW,gDADN;AAEL,oBAAc,qCAFT;AAGL,mBAAa,SAHR;AAIL,mBAAa,cAJR;AAKL,sBAAgB,GALX;AAML,eAAS,OANJ;AAOL,iBAAW,SAPN;AAQL,uBAAgB,sBARX;AASL,oCAA8B;AATzB,KAFD;AAaR;AACA,YAAQ,CAAC;AACL,eAAS,cADJ;AAEL,eAAS;AAFJ,KAAD,EAGL;AACC,eAAS,OADV;AAEC,eAAS;AAFV,KAHK,EAML;AACC,eAAS,OADV;AAEC,eAAS;AAFV,KANK,EASL;AACC,eAAS,YADV;AAEC,eAAS;AAFV,KATK,EAYL;AACC,eAAS,QADV;AAEC,eAAS;AAFV,KAZK,EAeL;AACC,eAAS,UADV;AAEC,eAAS;AAFV,KAfK,EAkBL;AACC,eAAS,OADV;AAEC,eAAS;AAFV,KAlBK,EAqBL;AACC,eAAS,KADV;AAEC,eAAS;AAFV,KArBK;AAdA;AAHK,CAArB,C,CA6CA;;IACMC,S;;;;;;;;;;;;;6BACK;AACN,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD,oBACOJ,YADP;AACqB,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWC,KADvC;AAC8C,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MADjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAMF;;;;EARqBd,KAAK,CAACe,S;;AAW9B,eAAeJ,SAAf","sourcesContent":["\n// Step 1 - Including react\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Step 2 - Including the react-fusioncharts component\nimport ReactFC from 'react-fusioncharts';\n\n// Step 3 - Including the fusioncharts library\nimport FusionCharts from 'fusioncharts';\n\n// Step 4 - Including the chart type\nimport Column2D from 'fusioncharts/fusioncharts.charts';\n\n// Step 5 - Including the theme as fusion\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.candy';\n\n// Step 6 - Adding the chart as dependency to the core fusioncharts\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\n// Step 7 - Creating the JSON object to store the chart configurations\nconst chartConfigs = {\n    type: 'column2d',// The chart type\n    dataFormat: 'json', // Data type\n    dataSource: {\n        // Chart Configuration\n        \"chart\": {\n            \"caption\": \"Countries With Highest Air Pollution [2017-18]\",\n            \"subCaption\": \"In PPM = Micrograms per cubic meter\",\n            \"xAxisName\": \"Country\",\n            \"yAxisName\": \"Median (PPM)\",\n            \"numberSuffix\": \"K\",\n            \"theme\": \"candy\",\n            \"bgColor\": \"#262a33\",\n            \"palettecolors\":\"5d62b5,29c3be,f2726f\",\n            \"containerBackgroundOpacity\": \"0\",\n        },\n        // Chart Data\n        \"data\": [{\n            \"label\": \"Saudi Arabia\",\n            \"value\": \"108\"\n        }, {\n            \"label\": \"Qatar\",\n            \"value\": \"103\"\n        }, {\n            \"label\": \"Egypt\",\n            \"value\": \"93\"\n        }, {\n            \"label\": \"Bangladesh\",\n            \"value\": \"84\"\n        }, {\n            \"label\": \"Kuwait\",\n            \"value\": \"75\"\n        }, {\n            \"label\": \"Cameroon\",\n            \"value\": \"65\"\n        }, {\n            \"label\": \"Nepal\",\n            \"value\": \"64\"\n        }, {\n            \"label\": \"UAE\",\n            \"value\": \"64\"\n        }]\n    }\n};\n\n// Step 8 - Creating the DOM element to pass the react-fusioncharts component\nclass FusionBar extends React.Component {\n  render() {\n     return (\n       <div className=\"chart\">\n         <ReactFC\n            {...chartConfigs} width={this.props.width} height={this.props.height}/>\n        </div>\n     );\n  }\n}\n\nexport default FusionBar;\n"]},"metadata":{},"sourceType":"module"}