{"ast":null,"code":"import _classCallCheck from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/Onoff.js\";\n//Including react\nimport React, { Component } from 'react'; //Including the react-fusioncharts component\n\nimport ReactDOM from 'react-dom'; //Including the fusioncharts library\n\nimport FusionCharts from 'fusioncharts'; //Including the chart type\n\nimport PowerCharts from 'fusioncharts/fusioncharts.powercharts'; //Including react-fusioncharts component\n\nimport ReactFC from 'react-fusioncharts'; //Including the theme as fusion\n\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion'; //Adding the chart as dependency to the core fusioncharts\n\nReactFC.fcRoot(FusionCharts, PowerCharts, FusionTheme); //Creating the JSON object to store the chart configurations\n\nvar chartConfigs = {\n  type: 'dragcolumn2d',\n  width: 500,\n  height: 400,\n  dataFormat: 'json',\n  dataSource: {\n    \"chart\": {\n      \"caption\": \"Android and iOS Devices Sales Projections\",\n      \"subCaption\": \"Drag the top of columns to adjust projections for 2017 & 2018\",\n      \"numberPrefix\": \"$\",\n      \"numberSuffix\": \"M\",\n      \"yaxismaxvalue\": \"200\",\n      \"theme\": \"fusion\",\n      \"plotToolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n    },\n    \"categories\": [{\n      \"category\": [{\n        \"label\": \"2014\",\n        \"fontItalic\": \"0\"\n      }, {\n        \"label\": \"2015\",\n        \"fontItalic\": \"0\"\n      }, {\n        \"label\": \"2016\",\n        \"fontItalic\": \"0\"\n      }, {\n        \"label\": \"2017 (Projected)\"\n      }, {\n        \"label\": \"2018 (Projected)\"\n      }]\n    }],\n    \"dataset\": [{\n      \"seriesname\": \"Android Devices\",\n      \"data\": [{\n        \"value\": \"73\",\n        \"alpha\": \"100\",\n        \"allowDrag\": \"0\"\n      }, {\n        \"value\": \"80\",\n        \"alpha\": \"100\",\n        \"allowDrag\": \"0\"\n      }, {\n        \"value\": \"97\",\n        \"alpha\": \"100\",\n        \"allowDrag\": \"0\"\n      }, {\n        \"value\": \"110\",\n        \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n      }, {\n        \"value\": \"180\",\n        \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n      }]\n    }, {\n      \"seriesname\": \"iOS Devices\",\n      \"data\": [{\n        \"value\": \"63.2\",\n        \"alpha\": \"100\",\n        \"allowDrag\": \"0\"\n      }, {\n        \"value\": \"68\",\n        \"alpha\": \"100\",\n        \"allowDrag\": \"0\"\n      }, {\n        \"value\": \"82\",\n        \"alpha\": \"100\",\n        \"allowDrag\": \"0\"\n      }, {\n        \"value\": \"99\",\n        \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n      }, {\n        \"value\": \"150\",\n        \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n      }]\n    }]\n  }\n};\n\nvar Onoff =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Onoff, _Component);\n\n  function Onoff(props) {\n    var _this;\n\n    _classCallCheck(this, Onoff);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Onoff).call(this, props));\n    _this.state = {\n      message: 'Drag any column for years 2017 or 2018 to see updated value along with the label'\n    };\n    _this.dataplotDragEnd = _this.dataplotDragEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Event callback handler for 'dataplotDragEnd' event.\n  // Shows a message with the dateset, initial value and final value of the dragged column.\n\n\n  _createClass(Onoff, [{\n    key: \"dataplotDragEnd\",\n    value: function dataplotDragEnd(eventObj, dataObj) {\n      var prevValue = FusionCharts.formatNumber(dataObj.startValue.toFixed(2));\n      var curValue = FusionCharts.formatNumber(dataObj.endValue.toFixed(2));\n      var labelYear = this.state.chart.args.dataSource.categories[0].category[dataObj.dataIndex].label;\n      this.setState({\n        message: [React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, eventObj.data.datasetName), \" is modified to \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, '$' + curValue + 'M'), \" from \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, '$' + prevValue + 'M'), \" for \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, labelYear)]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n        \"fcEvent-dataplotDragEnd\": this.dataplotDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        style: {\n          padding: '10px',\n          background: '#f5f2f0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, this.state.message));\n    }\n  }]);\n\n  return Onoff;\n}(Component);\n\nexport default Onoff;","map":{"version":3,"sources":["/Users/harman/Documents/Term-3/Directed-Studies/Prototype/react-dashboard/src/Onoff.js"],"names":["React","Component","ReactDOM","FusionCharts","PowerCharts","ReactFC","FusionTheme","fcRoot","chartConfigs","type","width","height","dataFormat","dataSource","Onoff","props","state","message","dataplotDragEnd","bind","eventObj","dataObj","prevValue","formatNumber","startValue","toFixed","curValue","endValue","labelYear","chart","args","categories","category","dataIndex","label","setState","data","datasetName","padding","background"],"mappings":"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","sourcesContent":["//Including react\nimport React, { Component } from 'react';\n\n//Including the react-fusioncharts component\nimport ReactDOM from 'react-dom';\n\n//Including the fusioncharts library\nimport FusionCharts from 'fusioncharts';\n\n//Including the chart type\nimport PowerCharts from 'fusioncharts/fusioncharts.powercharts';\n\n//Including react-fusioncharts component\nimport ReactFC from 'react-fusioncharts';\n\n//Including the theme as fusion\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\n//Adding the chart as dependency to the core fusioncharts\nReactFC.fcRoot(FusionCharts, PowerCharts, FusionTheme);\n\n//Creating the JSON object to store the chart configurations\n\nconst chartConfigs = {\n    type: 'dragcolumn2d',\n    width: 500,\n    height: 400,\n    dataFormat: 'json',\n    dataSource: {\n        \"chart\": {\n            \"caption\": \"Android and iOS Devices Sales Projections\",\n            \"subCaption\": \"Drag the top of columns to adjust projections for 2017 & 2018\",\n            \"numberPrefix\": \"$\",\n            \"numberSuffix\": \"M\",\n            \"yaxismaxvalue\": \"200\",\n            \"theme\": \"fusion\",\n            \"plotToolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n        },\n        \"categories\": [{\n            \"category\": [{\n                \"label\": \"2014\",\n                \"fontItalic\": \"0\"\n            }, {\n                \"label\": \"2015\",\n                \"fontItalic\": \"0\"\n            }, {\n                \"label\": \"2016\",\n                \"fontItalic\": \"0\"\n            }, {\n                \"label\": \"2017 (Projected)\"\n            }, {\n                \"label\": \"2018 (Projected)\"\n            }]\n        }],\n        \"dataset\": [{\n            \"seriesname\": \"Android Devices\",\n            \"data\": [{\n                \"value\": \"73\",\n                \"alpha\": \"100\",\n                \"allowDrag\": \"0\"\n            }, {\n                \"value\": \"80\",\n                \"alpha\": \"100\",\n                \"allowDrag\": \"0\"\n            }, {\n                \"value\": \"97\",\n                \"alpha\": \"100\",\n                \"allowDrag\": \"0\"\n            }, {\n                \"value\": \"110\",\n                \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n            }, {\n                \"value\": \"180\",\n                \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n            }]\n        }, {\n            \"seriesname\": \"iOS Devices\",\n            \"data\": [{\n                \"value\": \"63.2\",\n                \"alpha\": \"100\",\n                \"allowDrag\": \"0\"\n            }, {\n                \"value\": \"68\",\n                \"alpha\": \"100\",\n                \"allowDrag\": \"0\"\n            }, {\n                \"value\": \"82\",\n                \"alpha\": \"100\",\n                \"allowDrag\": \"0\"\n            }, {\n                \"value\": \"99\",\n                \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n            }, {\n                \"value\": \"150\",\n                \"toolText\": \"<b>$label</b><br>$seriesName: <b>$dataValue</b>\"\n            }]\n        }]\n    }\n};\n\nclass Onoff extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: 'Drag any column for years 2017 or 2018 to see updated value along with the label',\n    };\n\n    this.dataplotDragEnd = this.dataplotDragEnd.bind(this);\n  }\n\n  // Event callback handler for 'dataplotDragEnd' event.\n  // Shows a message with the dateset, initial value and final value of the dragged column.\n  dataplotDragEnd(eventObj, dataObj) {\n    var prevValue = FusionCharts.formatNumber(dataObj.startValue.toFixed(2));\n    var curValue = FusionCharts.formatNumber(dataObj.endValue.toFixed(2));\n    var labelYear = this.state.chart.args.dataSource.categories[0].category[dataObj.dataIndex].label\n    this.setState({\n      message: [\n        <strong>{eventObj.data.datasetName}</strong>,\n        \" is modified to \",\n        <strong>{'$' + curValue + 'M'}</strong>,\n        \" from \",\n        <strong>{'$' + prevValue + 'M'}</strong>,\n        \" for \",\n        <strong>{labelYear}</strong>\n      ]\n    });\n  }\n\n  render () {\n    return (\n      <div>\n        <ReactFC\n          {...chartConfigs}\n          fcEvent-dataplotDragEnd={this.dataplotDragEnd}\n        />\n        <p style={{ padding: '10px', background: '#f5f2f0' }}>\n          {this.state.message}\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Onoff;\n"]},"metadata":{},"sourceType":"module"}